# near_the_money_spy_daily_vix
# @2187Nick

# May 16, 2023
# This version usses vix to set a range of strikes to monitor.
# Adds chart bubble when price is rising and call premium exceeds $1 million.
# Adds chart bubble when price is falling and put premium exceeds $1 million.

# Run on 1 min chart only.  Calculates Premium. ( 1 min volume x 1 min OHLC4)
# Starts at 945. First 15 min lots of chaos and false signals.

declare lower;
declare once_per_bar;

input chain_width = 1;
input symbol = "SPY"; #"SPXW"
input premium_extreme = 1000000;

def after945 = SecondsFromTime(945) >= 0;

def vix = close("VIX", AggregationPeriod.DAY)[1];
def price = round(close(symbol, AggregationPeriod.day)[1],0);
#def price = round(close("SPX", AggregationPeriod.day)[1],0);


def move = vix / Sqrt(252) / 100;
def strike_down =  Round (price * (1 - move) / chain_width, 0.01) * chain_width;
def strike_up = Round (price * (1 + move) / chain_width, 0.01) * chain_width;
addlabel(yes, "Strike: " + strike_down + " to " + strike_up, color.cyan);


# get 0DTE expiration
def CurrentYear = GetYear()-2000;
def CurrentMonth = GetMonth();
def CurrentDay = GetDayOfMonth(GetYYYYMMDD());
def DateString = CurrentYear * 10000 + CurrentMonth * 100 + CurrentDay;

def Call_VolumexOHLC = fold strike_c = strike_down to strike_up with v do v +
                if IsNaN(volume("." + symbol +  AsPrice(DateString) + "C" + AsPrice(strike_c))) then 0
                else (volume("." + symbol +  AsPrice(DateString) + "C" + AsPrice(strike_c))
                *ohlc4("." + symbol +  AsPrice(DateString) + "C" + AsPrice(strike_c))
                );

def Put_VolumexOHLC = fold strike_p = strike_down to strike_up with v_p do v_p +
                if IsNaN(volume("." + symbol +  AsPrice(DateString) + "P" + AsPrice(strike_p)))then 0
                else (volume("." + symbol +  AsPrice(DateString) + "P" + AsPrice(strike_p))
                *ohlc4("." + symbol +  AsPrice(DateString) + "P" + AsPrice(strike_p))
                );

plot calls_total = if after945 then Call_VolumexOHLC*100 else 0;
calls_total.SetPaintingStrategy(PaintingStrategy.SQUARED_HISTOGRAM);
calls_total.AssignValueColor(if calls_total > premium_extreme then Color.GREEN else Color.DARK_GRAY);


plot puts_total = if after945 then -1.0 * put_VolumexOHLC*100 else 0;
puts_total.SetPaintingStrategy(PaintingStrategy.SQUARED_HISTOGRAM);
puts_total.AssignValueColor(if puts_total < -1.0 * premium_extreme then Color.RED else Color.DARK_GRAY);

plot highline = premium_extreme;
plot lowline = -1*premium_extreme;
highline.SetDefaultColor(Color.red);
lowline.SetDefaultColor(Color.green);
