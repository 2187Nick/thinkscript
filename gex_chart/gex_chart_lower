# Gex Plotted lower V2 Jul 31, 2023
# Twitter @2187Nick
# Adds labels and minimum gex amount.

declare lower;
declare once_per_bar;
input min_gex = 50;
input strikeSpacing = 1.0;
#input strikes = {default "0", "1", "2", "3", "4", "5", "6", "7", "8", "9",
#"10"};
input strikes = 10;

input roundup = no; # helpful with stock price below $10

input ManuallySetExpiration = {default "false", "true"};
input Expiration_YYMMDD = 230721;
def agg = AggregationPeriod.DAY;

def seconds_left = SecondsTillTime(1615);
def hours_left = seconds_left / 3600;
def days_left = hours_left / 24;

def IV = SeriesVolatility(series = 1);
def S = close(period=agg);
def r = 0;
def t = days_left / 365;
def Sqr_IV_2 = Sqr(IV) / 2 * t;
def Sqrt_t_iv = IV * Sqrt(t);

def Sqrt_pi = Sqrt(2 * Double.Pi);
def Sqrt_t_iv_S = S * IV * Sqrt(t);

def CurrentYear = GetYear() - 2000;
def CurrentMonth = GetMonth();
def CurrentDOM = GetDayOfMonth(GetYYYYMMDD());
def DateString_auto = CurrentYear * 10000 + CurrentMonth * 100 + CurrentDOM;

def DateString = if ManuallySetExpiration then Expiration_YYMMDD else  DateString_auto;

DefineGlobalColor("CallColor", Color.GREEN);
DefineGlobalColor("PutColor", Color.RED);
AddLabel(yes, AsPrice(DateString) + "C", GlobalColor("CallColor"));
AddLabel(yes, AsPrice(DateString) + "P", GlobalColor("PutColor"));

def openlevel = open(period = agg);
def rounding_factor = if strikeSpacing > 1 and strikeSpacing < 25 then -1 else if strikeSpacing > 24 then -2 else 0;
def floor_or_ceiling =  Round(openlevel, rounding_factor);
def base_strike = floor_or_ceiling;

def strike_base = base_strike;
def strike_plus1 = base_strike + strikeSpacing;
def strike_plus2 = base_strike + strikeSpacing * 2;
def strike_plus3 = base_strike + strikeSpacing * 3;
def strike_plus4 = base_strike + strikeSpacing * 4;
def strike_plus5 = base_strike + strikeSpacing * 5;
def strike_plus6 = base_strike + strikeSpacing * 6;
def strike_plus7 = base_strike + strikeSpacing * 7;
def strike_plus8 = base_strike + strikeSpacing * 8;
def strike_plus9 = base_strike + strikeSpacing * 9;
def strike_plus10 = base_strike + strikeSpacing * 10;

def strike_minus1 = base_strike - strikeSpacing;
def strike_minus2 = base_strike - strikeSpacing * 2;
def strike_minus3 = base_strike - strikeSpacing * 3;
def strike_minus4 = base_strike - strikeSpacing * 4;
def strike_minus5 = base_strike - strikeSpacing * 5;
def strike_minus6 = base_strike - strikeSpacing * 6;
def strike_minus7 = base_strike - strikeSpacing * 7;
def strike_minus8 = base_strike - strikeSpacing * 8;
def strike_minus9 = base_strike - strikeSpacing * 9;
def strike_minus10 = base_strike - strikeSpacing * 10;

### Put Option open_interest
def putopen_interest = if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_base),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_base),period=agg);
def putopen_interest1 =  if strikes < 1 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus1),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus1),period=agg);
def putopen_interest2 =  if strikes < 2 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus2),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus2),period=agg);
def putopen_interest3 =  if strikes < 3 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus3),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus3),period=agg);
def putopen_interest4 = if strikes < 4 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus4),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus4),period=agg);
def putopen_interest5 = if strikes < 5 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus5),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus5),period=agg);
def putopen_interest6 = if strikes < 6 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus6),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus6),period=agg);
def putopen_interest7 = if strikes < 7 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus7),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus7),period=agg);
def putopen_interest8 = if strikes < 8 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus8),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus8),period=agg);
def putopen_interest9 = if strikes < 9 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus9),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus9),period=agg);
def putopen_interest10 = if strikes < 10 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus10),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_minus10),period=agg);

def putopen_interest1a =  if strikes < 1 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus1),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus1),period=agg);
def putopen_interest2a =  if strikes < 2 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus2),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus2),period=agg);
def putopen_interest3a =  if strikes < 3 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus3),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus3),period=agg);
def putopen_interest4a = if strikes < 4 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus4),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus4),period=agg);
def putopen_interest5a = if strikes < 5 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus5),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus5),period=agg);
def putopen_interest6a = if strikes < 6 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus6),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus6),period=agg);
def putopen_interest7a = if strikes < 7 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus7),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus7),period=agg);
def putopen_interest8a = if strikes < 8 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus8),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus8),period=agg);
def putopen_interest9a = if strikes < 9 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus9),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus9),period=agg);
def putopen_interest10a = if strikes < 10 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus10),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "P" + AsPrice(strike_plus10),period=agg);

###Call Option open_interest
def call_open_interest = if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_base),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_base),period=agg);
def call_open_interest1 =  if strikes < 1 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus1),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus1),period=agg);
def call_open_interest2 =  if strikes < 2 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus2),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus2),period=agg);
def call_open_interest3 =  if strikes < 3 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus3),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus3),period=agg);
def call_open_interest4 = if strikes < 4 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus4),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus4),period=agg);
def call_open_interest5 = if strikes < 5 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus5),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus5),period=agg);
def call_open_interest6 = if strikes < 6 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus6),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus6),period=agg);
def call_open_interest7 = if strikes < 7 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus7),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus7),period=agg);
def call_open_interest8 = if strikes < 8 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus8),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus8),period=agg);
def call_open_interest9 = if strikes < 9 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus9),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus9),period=agg);
def call_open_interest10 = if strikes < 10 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus10),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_plus10),period=agg);

def call_open_interest1a =  if strikes < 1 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus1),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus1),period=agg);
def call_open_interest2a =  if strikes < 2 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus2),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus2),period=agg);
def call_open_interest3a =  if strikes < 3 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus3),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus3),period=agg);
def call_open_interest4a = if strikes < 4 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus4),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus4),period=agg);
def call_open_interest5a = if strikes < 5 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus5),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus5),period=agg);
def call_open_interest6a = if strikes < 6 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus6),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus6),period=agg);
def call_open_interest7a = if strikes < 7 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus7),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus7),period=agg);
def call_open_interest8a = if strikes < 8 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus8),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus8),period=agg);
def call_open_interest9a = if strikes < 9 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus9),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus9),period=agg);
def call_open_interest10a = if strikes < 10 then 0 else if IsNaN(open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus10),period=agg)) then 0 else open_interest("." + GetSymbol() + AsPrice(DateString) + "C" + AsPrice(strike_minus10),period=agg);

# Gamma
#def d2 = Exp(-(Sqr(d1) / 2)) / Sqrt(2 * Double.Pi);
#def Gamma = d2 / (S * (IV * Sqrt(t)));

### Gamma
def strike_base_gamma = (Exp(-(Sqr((Log(S / strike_base) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
#addlabel(yes, base_strike + ": " + strike_base_gamma);
def strike_plus1_gamma = (Exp(-(Sqr((Log(S / strike_plus1) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
#addlabel(yes, strike_plus1 + ": " + strike_plus1_gamma);
def strike_plus2_gamma = (Exp(-(Sqr((Log(S / strike_plus2) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
#addlabel(yes, strike_plus2 + ": " + strike_plus2_gamma);
def strike_plus3_gamma = (Exp(-(Sqr((Log(S / strike_plus3) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus4_gamma = (Exp(-(Sqr((Log(S / strike_plus4) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus5_gamma = (Exp(-(Sqr((Log(S / strike_plus5) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus6_gamma = (Exp(-(Sqr((Log(S / strike_plus6) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus7_gamma = (Exp(-(Sqr((Log(S / strike_plus7) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus8_gamma = (Exp(-(Sqr((Log(S / strike_plus8) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus9_gamma = (Exp(-(Sqr((Log(S / strike_plus9) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_plus10_gamma = (Exp(-(Sqr((Log(S / strike_plus10) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;

###
def strike_minus1_gamma = (Exp(-(Sqr((Log(S / strike_minus1) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
#addlabel(yes, strike_minus1 + ": " + strike_minus1_gamma);
def strike_minus2_gamma = (Exp(-(Sqr((Log(S / strike_minus2) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus3_gamma = (Exp(-(Sqr((Log(S / strike_minus3) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus4_gamma = (Exp(-(Sqr((Log(S / strike_minus4) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus5_gamma = (Exp(-(Sqr((Log(S / strike_minus5) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus6_gamma = (Exp(-(Sqr((Log(S / strike_minus6) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus7_gamma = (Exp(-(Sqr((Log(S / strike_minus7) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus8_gamma = (Exp(-(Sqr((Log(S / strike_minus8) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus9_gamma = (Exp(-(Sqr((Log(S / strike_minus9) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;
def strike_minus10_gamma = (Exp(-(Sqr((Log(S / strike_minus10) + Sqr_IV_2) / Sqrt_t_iv) / 2)) / Sqrt_pi)/Sqrt_t_iv_S;

### GEX
def strike_base_gex = round((strike_base_gamma*(call_open_interest-putopen_interest)*S)/10000,0);
def strike_plus1_gex = round((strike_plus1_gamma*(call_open_interest1-putopen_interest1a)*S)/10000,0);
def strike_plus2_gex =  round((strike_plus2_gamma*(call_open_interest2-putopen_interest2a)*S)/10000,0);
def strike_plus3_gex =  round((strike_plus3_gamma*(call_open_interest3-putopen_interest3a)*S)/10000,0);
def strike_plus4_gex =  round((strike_plus4_gamma*(call_open_interest4-putopen_interest4a)*S)/10000,0);
def strike_plus5_gex =  round((strike_plus5_gamma*(call_open_interest5-putopen_interest5a)*S)/10000,0);
def strike_plus6_gex =  round((strike_plus6_gamma*(call_open_interest6-putopen_interest6a)*S)/10000,0); 
def strike_plus7_gex =  round((strike_plus7_gamma*(call_open_interest7-putopen_interest7a)*S)/10000,0);
def strike_plus8_gex =  round((strike_plus8_gamma*(call_open_interest8-putopen_interest8a)*S)/10000,0);
def strike_plus9_gex =  round((strike_plus9_gamma*(call_open_interest9-putopen_interest9a)*S)/10000,0);
def strike_plus10_gex =  round((strike_plus10_gamma*(call_open_interest10-putopen_interest10a)*S)/10000,0);

def strike_minus1_gex =  round((strike_minus1_gamma*(call_open_interest1a-putopen_interest1)*S)/10000,0);
def strike_minus2_gex =  round((strike_minus2_gamma*(call_open_interest2a-putopen_interest2)*S)/10000,0);
def strike_minus3_gex =  round((strike_minus3_gamma*(call_open_interest3a-putopen_interest3)*S)/10000,0);
def strike_minus4_gex =  round((strike_minus4_gamma*(call_open_interest4a-putopen_interest4)*S)/10000,0);
def strike_minus5_gex =  round((strike_minus5_gamma*(call_open_interest5a-putopen_interest5)*S)/10000,0);
def strike_minus6_gex =  round((strike_minus6_gamma*(call_open_interest6a-putopen_interest6)*S)/10000,0);
def strike_minus7_gex =  round((strike_minus7_gamma*(call_open_interest7a-putopen_interest7)*S)/10000,0);
def strike_minus8_gex =  round((strike_minus8_gamma*(call_open_interest8a-putopen_interest8)*S)/10000,0);
def strike_minus9_gex =  round((strike_minus9_gamma*(call_open_interest9a-putopen_interest9)*S)/10000,0);
def strike_minus10_gex =  round((strike_minus10_gamma*(call_open_interest10a-putopen_interest10)*S)/10000,0);

#####################################

def shift_line_right = 5;

def lastbar = if IsNaN(close[-1]) and !IsNaN(close)  
              then BarNumber()  
              else lastbar[1]; 

#AddVerticalLine(BarNumber() >= HighestAll(lastbar +  shift_line_right) and  BarNumber() <= HighestAll(lastbar +  shift_line_right), "Gamma Exposure",color.white,Curve.LONG_DASH);

plot base = if absValue(strike_base_gex) > min_gex then strike_base_gex else double.nan;

plot base_plus1 = if strikes >0 and absValue(strike_plus1_gex) > min_gex then strike_plus1_gex else double.nan;
plot base_plus2 = if strikes > 1 and absValue(strike_plus2_gex) > min_gex then strike_plus2_gex else double.nan;
plot base_plus3 = if strikes > 2 and absValue(strike_plus3_gex) > min_gex then strike_plus3_gex else double.nan;
plot base_plus4 = if strikes > 3 and absValue(strike_plus4_gex) > min_gex then strike_plus4_gex else double.nan;
plot base_plus5 = if strikes > 4 and absValue(strike_plus5_gex) > min_gex then strike_plus5_gex else double.nan;
plot base_plus6 = if strikes > 5 and absValue(strike_plus6_gex) > min_gex then strike_plus6_gex else double.nan;
plot base_plus7 = if strikes > 6 and absValue(strike_plus7_gex) > min_gex then strike_plus7_gex else double.nan;
plot base_plus8 = if strikes > 7 and absValue(strike_plus8_gex) > min_gex then strike_plus8_gex else double.nan;
plot base_plus9 = if strikes > 8 and absValue(strike_plus9_gex) > min_gex then strike_plus9_gex else double.nan;
plot base_plus10 = if strikes > 9 and absValue(strike_plus10_gex) > min_gex then strike_plus10_gex else double.nan;

plot base_minus1 = if strikes >0 and absValue(strike_minus1_gex) > min_gex then strike_minus1_gex else double.nan;
plot base_minus2 = if strikes > 1 and absValue(strike_minus2_gex) > min_gex then strike_minus2_gex else double.nan;
plot base_minus3 = if strikes > 2 and absValue(strike_minus3_gex) > min_gex then strike_minus3_gex else double.nan;
plot base_minus4 = if strikes > 3 and absValue(strike_minus4_gex) > min_gex then strike_minus4_gex else double.nan;
plot base_minus5 = if strikes > 4 and absValue(strike_minus5_gex) > min_gex then strike_minus5_gex else double.nan;
plot base_minus6 = if strikes > 5 and absValue(strike_minus6_gex) > min_gex then strike_minus6_gex else double.nan;
plot base_minus7 = if strikes > 6 and absValue(strike_minus7_gex) > min_gex then strike_minus7_gex else double.nan;
plot base_minus8 = if strikes > 7 and absValue(strike_minus8_gex) > min_gex then strike_minus8_gex else double.nan;
plot base_minus9 = if strikes > 8 and absValue(strike_minus9_gex) > min_gex then strike_minus9_gex else double.nan;
plot base_minus10 = if strikes > 9 and absValue(strike_minus10_gex) > min_gex then strike_minus10_gex else double.nan;

base.setlineweight(5);
base_plus1.setlineweight(5);
base_plus2.setlineweight(5);
base_plus3.setlineweight(5);
base_plus4.setlineweight(5);
base_plus5.setlineweight(5);
base_plus6.setlineweight(5);
base_plus7.setlineweight(5);
base_plus8.setlineweight(5);
base_plus9.setlineweight(5);
base_plus10.setlineweight(5);

base_minus1.setlineweight(5);
base_minus2.setlineweight(5);
base_minus3.setlineweight(5);
base_minus4.setlineweight(5);
base_minus5.setlineweight(5);
base_minus6.setlineweight(5);
base_minus7.setlineweight(5);
base_minus8.setlineweight(5);   
base_minus9.setlineweight(5);
base_minus10.setlineweight(5);



#AddChartBubble(if BarNumber() >= HighestAll(lastbar + shift_line_right)  and  BarNumber() <= HighestAll(lastbar + shift_line_right) and strike_minus1_gex and strikes > 0 then yes else no, strike_minus1, strike_minus1_gex, if strike_minus1_gex > 0 then Color.GREEN else Color.RED, if strike_minus1_gex > 0 then yes else no);

# only display at current bar, price location = gex level, text = strike
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_base_gex) > min_gex , strike_base_gex, base_strike, if strike_base_gex > 0 then Color.GREEN else Color.RED, if strike_base_gex > 0 then yes else no);

AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus1_gex) > min_gex, strike_minus1_gex, strike_minus1, if strike_minus1_gex > 0 then Color.GREEN else Color.RED, if strike_minus1_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber())  and absValue( strike_minus2_gex) > min_gex, strike_minus2_gex, strike_minus2, if strike_minus2_gex > 0 then Color.GREEN else Color.RED, if strike_minus2_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus3_gex) > min_gex, strike_minus3_gex, strike_minus3, if strike_minus3_gex > 0 then Color.GREEN else Color.RED, if strike_minus3_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus4_gex) > min_gex, strike_minus4_gex, strike_minus4, if strike_minus4_gex > 0 then Color.GREEN else Color.RED, if strike_minus4_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus5_gex) > min_gex, strike_minus5_gex, strike_minus5, if strike_minus5_gex > 0 then Color.GREEN else Color.RED, if strike_minus5_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus6_gex) > min_gex, strike_minus6_gex, strike_minus6, if strike_minus6_gex > 0 then Color.GREEN else Color.RED, if strike_minus6_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus7_gex) > min_gex, strike_minus7_gex, strike_minus7, if strike_minus7_gex > 0 then Color.GREEN else Color.RED, if strike_minus7_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus8_gex) > min_gex, strike_minus8_gex, strike_minus8, if strike_minus8_gex > 0 then Color.GREEN else Color.RED, if strike_minus8_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus9_gex) > min_gex, strike_minus9_gex, strike_minus9, if strike_minus9_gex > 0 then Color.GREEN else Color.RED, if strike_minus9_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_minus10_gex) > min_gex, strike_minus10_gex, strike_minus10, if strike_minus10_gex > 0 then Color.GREEN else Color.RED, if strike_minus10_gex > 0 then yes else no);

AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus1_gex) > min_gex, strike_plus1_gex, strike_plus1, if strike_plus1_gex > 0 then Color.GREEN else Color.RED, if strike_plus1_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber())  and absValue( strike_plus2_gex) > min_gex, strike_plus2_gex, strike_plus2, if strike_plus2_gex > 0 then Color.GREEN else Color.RED, if strike_plus2_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus3_gex) > min_gex, strike_plus3_gex, strike_plus3, if strike_plus3_gex > 0 then Color.GREEN else Color.RED, if strike_plus3_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus4_gex) > min_gex, strike_plus4_gex, strike_plus4, if strike_plus4_gex > 0 then Color.GREEN else Color.RED, if strike_plus4_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus5_gex) > min_gex, strike_plus5_gex, strike_plus5, if strike_plus5_gex > 0 then Color.GREEN else Color.RED, if strike_plus5_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus6_gex) > min_gex, strike_plus6_gex, strike_plus6, if strike_plus6_gex > 0 then Color.GREEN else Color.RED, if strike_plus6_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus7_gex) > min_gex, strike_plus7_gex, strike_plus7, if strike_plus7_gex > 0 then Color.GREEN else Color.RED, if strike_plus7_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus8_gex) > min_gex, strike_plus8_gex, strike_plus8, if strike_plus8_gex > 0 then Color.GREEN else Color.RED, if strike_plus8_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus9_gex) > min_gex, strike_plus9_gex, strike_plus9, if strike_plus9_gex > 0 then Color.GREEN else Color.RED, if strike_plus9_gex > 0 then yes else no);
AddChartBubble(BarNumber()== HighestAll(BarNumber()) and absValue( strike_plus10_gex) > min_gex, strike_plus10_gex, strike_plus10, if strike_plus10_gex > 0 then Color.GREEN else Color.RED, if strike_plus10_gex > 0 then yes else no);
