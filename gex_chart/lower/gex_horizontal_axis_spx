# GEX Horizontal Axis SPX V3 Sep 6 2024
# Twitter @2187Nick  
# Setting the base strike to latest price. Instead of open price.
declare lower;
declare once_per_bar;

# If testing premarket then you can only use the previous days Open Interest
# The Open Interest will update once the market opens.

def AfterRTHStart = GetTime() >= regularTradingStart(getYYYYMMDD());
#def day = if !AfterRTHStart then 0 else 1;
#addlabel(yes, "AfterRTHStart: " + AfterRTHStart);
def day = 0;
def yday = 1;

AddLabel(!AfterRTHStart ,"Premarket: Using Prev. Day OI",Color.Gray);

input symbol = "SPX";

input strikeSpacing = 5.0;
input strikes = 20;
input shift_left = 1;
input threshold = 20;

def lastbar = if IsNaN(close[-1]) and !IsNaN(close)  
              then BarNumber()  
              else lastbar[1]; 

input ManuallySetExpiration = {default "false", "true"};
input Expiration_YYMMDD = 240117;
def DateString_auto = GetYYYYMMDD() - 20000000;
def DateString = if ManuallySetExpiration then Expiration_YYMMDD else  DateString_auto;

def agg = AggregationPeriod.Day;
def seconds_left = SecondsTillTime(1615);
def hours_left = seconds_left / 3600;
def days_left = if hours_left <= 0 then 0 else hours_left / 24;

def Vol = imp_volatility(symbol="/ES", agg);
#addlabel(yes, "Vol: " + Vol, color.white);
def S = if AfterRTHStart then close(symbol="SPX", agg) else  close(symbol="SPX", agg)[1];
#def S = close(period = agg);
#addlabel(yes, "S_close: " + S, color.white);

def t = ((DateString - DateString_auto) + days_left) / 365;
#addlabel(yes, "t: " + t);
#def t = 1/365;
def Sqr_Vol_2 = Sqr(Vol)*.5* t;
def Vol_Sqrt_t = Vol * Sqrt(t);
def Sqrt_2pi = 2.5066;
def Vol_Sqrt_t_S = S * Vol_Sqrt_t;

DefineGlobalColor("CallColor", Color.GREEN);
DefineGlobalColor("PutColor", Color.RED);
AddLabel(yes, "SPX", color.cyan);
AddLabel(yes, "GEX", color.cyan);
AddLabel(yes, AsPrice(DateString) + "C", GlobalColor("CallColor"));
AddLabel(yes, AsPrice(DateString) + "P", GlobalColor("PutColor"));

# Open Price
def todayOpen = open(symbol, period = "DAY");
def yesterdayOpen = open(symbol, period = "DAY")[1];
def lastPrice = if !IsNaN(close(symbol)) 
                then close(symbol)
                else close(symbol, period = "DAY", PriceType.LAST);
def openPrice = if !IsNaN(todayOpen) then todayOpen 
                else if !IsNaN(yesterdayOpen) then yesterdayOpen 
                else lastPrice;

#def openlevel = open(period = agg);
#addlabel(yes, "yesterdayOpen: " + yesterdayOpen, color.cyan);
def rounding_factor = if strikeSpacing > 1 and strikeSpacing < 25 then -1 else if strikeSpacing > 24 then -2 else 0;
def floor_or_ceiling =  Round(openPrice, rounding_factor);
#def floor_or_ceiling =  Round(S, rounding_factor);
def base_strike = floor_or_ceiling;
#addlabel(yes, "centerStrike: " + base_strike);

Script GEX {
    input strike = 0;
    input dateString = 0;
    input Vol = 0;
    input t = 0;
    input S = 0;
    input todayoryday = 0;
    input Sqr_Vol_2 = 0;
    input Vol_Sqrt_t = 0;
    input Vol_Sqrt_t_S = 0;
    def gamma = (Exp(-.5*(Sqr((Log(S / strike) + Sqr_Vol_2) / Vol_Sqrt_t) )) /2.5066) / Vol_Sqrt_t_S;

    # GEX per $10 move is SPX.(GEX per $1 move in SPY)
    plot strikeGEX = Round((open_interest(".SPXW" + AsPrice(dateString) + "C" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday] - open_interest(".SPXW" + AsPrice(dateString) + "P" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday]) * gamma*S/1000,0);
}

def strike_base = base_strike;
def strike_plus1 = base_strike + strikeSpacing;
def strike_plus2 = base_strike + strikeSpacing * 2;
def strike_plus3 = base_strike + strikeSpacing * 3;
def strike_plus4 = base_strike + strikeSpacing * 4;
def strike_plus5 = base_strike + strikeSpacing * 5;
def strike_plus6 = base_strike + strikeSpacing * 6;
def strike_plus7 = base_strike + strikeSpacing * 7;
def strike_plus8 = base_strike + strikeSpacing * 8;
def strike_plus9 = base_strike + strikeSpacing * 9;
def strike_plus10 = base_strike + strikeSpacing * 10;
def strike_plus11 = base_strike + strikeSpacing * 11;
def strike_plus12 = base_strike + strikeSpacing * 12;
def strike_plus13 = base_strike + strikeSpacing * 13;
def strike_plus14 = base_strike + strikeSpacing * 14;
def strike_plus15 = base_strike + strikeSpacing * 15;
def strike_plus16 = base_strike + strikeSpacing * 16;
def strike_plus17 = base_strike + strikeSpacing * 17;
def strike_plus18 = base_strike + strikeSpacing * 18;
def strike_plus19 = base_strike + strikeSpacing * 19;
def strike_plus20 = base_strike + strikeSpacing * 20;

def strike_minus1 = base_strike - strikeSpacing;
def strike_minus2 = base_strike - strikeSpacing * 2;
def strike_minus3 = base_strike - strikeSpacing * 3;
def strike_minus4 = base_strike - strikeSpacing * 4;
def strike_minus5 = base_strike - strikeSpacing * 5;
def strike_minus6 = base_strike - strikeSpacing * 6;
def strike_minus7 = base_strike - strikeSpacing * 7;
def strike_minus8 = base_strike - strikeSpacing * 8;
def strike_minus9 = base_strike - strikeSpacing * 9;
def strike_minus10 = base_strike - strikeSpacing * 10;
def strike_minus11 = base_strike - strikeSpacing * 11;
def strike_minus12 = base_strike - strikeSpacing * 12;
def strike_minus13 = base_strike - strikeSpacing * 13;
def strike_minus14 = base_strike - strikeSpacing * 14;
def strike_minus15 = base_strike - strikeSpacing * 15;
def strike_minus16 = base_strike - strikeSpacing * 16;
def strike_minus17 = base_strike - strikeSpacing * 17;
def strike_minus18 = base_strike - strikeSpacing * 18;
def strike_minus19 = base_strike - strikeSpacing * 19;
def strike_minus20 = base_strike - strikeSpacing * 20;

### GEX
def strike_base_gex = if AfterRTHStart then GEX(strike_base, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_base, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;

#addlabel(yes, "strike_base_gamma : " + GEX(strike_base, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).gamma);
#addlabel(yes, "strike_base_gex : " + strike_base_gex);
def strike_plus1_gex = if AfterRTHStart then GEX(strike_plus1, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus1, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
#addlabel(yes, "strike_plus1_gex : " + strike_plus1_gex);
def strike_plus2_gex = if AfterRTHStart then GEX(strike_plus2, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus2, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus3_gex = if AfterRTHStart then GEX(strike_plus3, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus3, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus4_gex = if AfterRTHStart then GEX(strike_plus4, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus4, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus5_gex = if AfterRTHStart then GEX(strike_plus5, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus5, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus6_gex = if AfterRTHStart then GEX(strike_plus6, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus6, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus7_gex = if AfterRTHStart then GEX(strike_plus7, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus7, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus8_gex = if AfterRTHStart then GEX(strike_plus8, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus8, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus9_gex = if AfterRTHStart then GEX(strike_plus9, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus9, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus10_gex = if AfterRTHStart then GEX(strike_plus10, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus10, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus11_gex = if AfterRTHStart then GEX(strike_plus11, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus11, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus12_gex = if AfterRTHStart then GEX(strike_plus12, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus12, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus13_gex = if AfterRTHStart then GEX(strike_plus13, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus13, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus14_gex = if AfterRTHStart then GEX(strike_plus14, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus14, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus15_gex = if AfterRTHStart then GEX(strike_plus15, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus15, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus16_gex = if AfterRTHStart then GEX(strike_plus16, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus16, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus17_gex = if AfterRTHStart then GEX(strike_plus17, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus17, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus18_gex = if AfterRTHStart then GEX(strike_plus18, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus18, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus19_gex = if AfterRTHStart then GEX(strike_plus19, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus19, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_plus20_gex = if AfterRTHStart then GEX(strike_plus20, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_plus20, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;

def strike_minus1_gex = if AfterRTHStart then GEX(strike_minus1, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus1, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus2_gex = if AfterRTHStart then GEX(strike_minus2, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus2, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus3_gex = if AfterRTHStart then GEX(strike_minus3, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus3, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus4_gex = if AfterRTHStart then GEX(strike_minus4, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus4, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus5_gex = if AfterRTHStart then GEX(strike_minus5, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus5, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus6_gex = if AfterRTHStart then GEX(strike_minus6, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus6, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus7_gex = if AfterRTHStart then GEX(strike_minus7, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus7, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus8_gex = if AfterRTHStart then GEX(strike_minus8, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus8, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus9_gex = if AfterRTHStart then GEX(strike_minus9, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus9, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus10_gex = if AfterRTHStart then GEX(strike_minus10, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus10, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus11_gex = if AfterRTHStart then GEX(strike_minus11, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus11, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus12_gex = if AfterRTHStart then GEX(strike_minus12, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus12, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus13_gex = if AfterRTHStart then GEX(strike_minus13, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus13, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus14_gex = if AfterRTHStart then GEX(strike_minus14, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus14, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus15_gex = if AfterRTHStart then GEX(strike_minus15, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus15, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus16_gex = if AfterRTHStart then GEX(strike_minus16, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus16, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus17_gex = if AfterRTHStart then GEX(strike_minus17, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus17, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus18_gex = if AfterRTHStart then GEX(strike_minus18, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus18, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus19_gex = if AfterRTHStart then GEX(strike_minus19, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus19, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;
def strike_minus20_gex = if AfterRTHStart then GEX(strike_minus20, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX
else GEX(strike_minus20, dateString, Vol, t, S, yday, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGEX;

plot base = if BarNumber() == HighestAll(lastbar - (shift_left*10)) then strike_base_gex[shift_left*-10] else Double.Nan;
base.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base.setLineWeight(5);
base.AssignValueColor(if strike_base_gex[shift_left*-10] > 0 then Color.green else Color.orange);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*10)) then yes else no, 0, base_strike, color.gray, if strike_base_gex[shift_left*-10] > 0 then no else yes);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*10)) then yes else no, strike_base_gex[shift_left*-10], strike_base_gex[shift_left*-10], if strike_base_gex[shift_left*-10] > 0 then Color.Cyan else Color.RED, if strike_base_gex > 0 then yes else no);

plot base_plus1 = if BarNumber() == HighestAll(lastbar - (shift_left*9)) then strike_plus1_gex[shift_left*-9] else Double.Nan;
base_plus1.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus1.setLineWeight(5);
base_plus1.AssignValueColor(if strike_plus1_gex[shift_left*-9] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*9))  and AbsValue(strike_plus1_gex[shift_left*-9]) > threshold then yes else no, strike_plus1_gex[shift_left*-9], strike_plus1_gex[shift_left*-9], if strike_plus1_gex[shift_left*-9] > 0 then Color.Cyan else Color.RED, if strike_plus1_gex[shift_left*-9] > 0 then yes else no);

plot base_plus2 = if BarNumber() == HighestAll(lastbar - (shift_left*8)) then strike_plus2_gex[shift_left*-8] else Double.Nan;
base_plus2.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus2.setLineWeight(5);
base_plus2.AssignValueColor(if strike_plus2_gex[shift_left*-8] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar- (shift_left*8)) and AbsValue(strike_plus2_gex[shift_left*-8]) > threshold then yes else no, strike_plus2_gex[shift_left*-8], strike_plus2_gex[shift_left*-8], if strike_plus2_gex[shift_left*-8] > 0 then Color.Cyan else Color.RED, if strike_plus2_gex[shift_left*-8] > 0 then yes else no);


# For Testing
# time condition(barNumber == barNumber - 8)
#AddChartBubble(time condition, price location, text in bubble, color, up)
#AddChartBubble(yes, BarNumber(), strike_plus2_gex[-8], color.white);
#addlabel(yes, "strike_plus2_gex: " + strike_plus2_gex);


plot base_plus3 = if BarNumber() == HighestAll(lastbar - (shift_left*7)) then strike_plus3_gex[shift_left*-7] else Double.Nan;
base_plus3.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus3.setLineWeight(5);
base_plus3.AssignValueColor(if strike_plus3_gex[shift_left*-7] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*7)) and AbsValue(strike_plus3_gex[shift_left*-7]) > threshold then yes else no, strike_plus3_gex[shift_left*-7], strike_plus3_gex[shift_left*-7], if strike_plus3_gex[shift_left*-7] > 0 then Color.Cyan else Color.RED, if strike_plus3_gex[shift_left*-7] > 0 then yes else no);

plot base_plus4 = if BarNumber() == HighestAll(lastbar - (shift_left*6)) then strike_plus4_gex[shift_left*-6] else Double.Nan;
base_plus4.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus4.setLineWeight(5);
base_plus4.AssignValueColor(if strike_plus4_gex[shift_left*-6] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*6)) and AbsValue(strike_plus4_gex[shift_left*-6]) > threshold then yes else no, strike_plus4_gex[shift_left*-6], strike_plus4_gex[shift_left*-6], if strike_plus4_gex[shift_left*-6] > 0 then Color.Cyan else Color.RED, if strike_plus4_gex[shift_left*-6] > 0 then yes else no);

plot base_plus5 = if BarNumber() == HighestAll(lastbar - (shift_left*5)) then strike_plus5_gex[shift_left*-5] else Double.Nan;
base_plus5.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus5.setLineWeight(5);
base_plus5.AssignValueColor(if strike_plus5_gex[shift_left*-5] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*5))  then yes else no, 0, strike_plus5, color.gray, if strike_plus5_gex[shift_left*-5] > 0 then no else yes);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*5)) and AbsValue(strike_plus5_gex[shift_left*-5]) > threshold then yes else no, strike_plus5_gex[shift_left*-5], strike_plus5_gex[shift_left*-5], if strike_plus5_gex[shift_left*-5] > 0 then Color.Cyan else Color.RED, if strike_plus5_gex[shift_left*-5] > 0 then yes else no);



plot base_plus6 = if BarNumber() == HighestAll(lastbar - (shift_left*4)) then strike_plus6_gex[shift_left*-4] else Double.Nan;
base_plus6.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus6.setLineWeight(5);
base_plus6.AssignValueColor(if strike_plus6_gex[shift_left*-4] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*4)) and AbsValue(strike_plus6_gex[shift_left*-4]) > threshold then yes else no, strike_plus6_gex[shift_left*-4], strike_plus6_gex[shift_left*-4], if strike_plus6_gex[shift_left*-4] > 0 then Color.Cyan else Color.RED, if strike_plus6_gex[shift_left*-4] > 0 then yes else no);

plot base_plus7 = if BarNumber() == HighestAll(lastbar - (shift_left*3)) then strike_plus7_gex[shift_left*-3] else Double.Nan;
base_plus7.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus7.setLineWeight(5);
base_plus7.AssignValueColor(if strike_plus7_gex[shift_left*-3] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*3)) and AbsValue(strike_plus7_gex[shift_left*-3]) > threshold then yes else no, strike_plus7_gex[shift_left*-3], strike_plus7_gex[shift_left*-3], if strike_plus7_gex[shift_left*-3] > 0 then Color.Cyan else Color.RED, if strike_plus7_gex[shift_left*-3] > 0 then yes else no);


plot base_plus8 = if BarNumber() == HighestAll(lastbar - (shift_left*2)) then strike_plus8_gex[shift_left*-2] else Double.Nan;
base_plus8.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus8.setLineWeight(5);
base_plus8.AssignValueColor(if strike_plus8_gex[shift_left*-2] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*2)) and AbsValue(strike_plus8_gex[shift_left*-2]) > threshold then yes else no, strike_plus8_gex[shift_left*-2], strike_plus8_gex[shift_left*-2], if strike_plus8_gex[shift_left*-2] > 0 then Color.Cyan else Color.RED, if strike_plus8_gex[shift_left*-2] > 0 then yes else no);
plot base_plus9 = if BarNumber() == HighestAll(lastbar - (shift_left))  then strike_plus9_gex[shift_left*-1] else Double.Nan;
base_plus9.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus9.setLineWeight(5);
base_plus9.AssignValueColor(if strike_plus9_gex[shift_left*-1] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left))  and AbsValue(strike_plus9_gex[shift_left*-1]) > threshold then yes else no, strike_plus9_gex[shift_left*-1], strike_plus9_gex[shift_left*-1], if strike_plus9_gex[shift_left*-1] > 0 then Color.Cyan else Color.RED, if strike_plus9_gex[shift_left*-1] > 0 then yes else no);

plot base_plus10 = if BarNumber() == HighestAll(lastbar - (shift_left-1))  then strike_plus10_gex[shift_left-1] else Double.Nan;
base_plus10.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus10.setLineWeight(5);
base_plus10.AssignValueColor(if strike_plus10_gex[shift_left-1] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-1)) and  AbsValue(strike_plus10_gex[shift_left-1]) > threshold then yes else no, strike_plus10_gex[shift_left-1], strike_plus10_gex[shift_left-1], if strike_plus10_gex[shift_left-1] > 0 then Color.Cyan else Color.RED, if strike_plus10_gex[shift_left-1] > 0 then yes else no);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-1))  then yes else no, 0, strike_plus10, color.gray, if strike_plus10_gex[shift_left-1] > 0 then no else yes);

plot base_plus11 = if BarNumber() == HighestAll(lastbar - (shift_left-2)) then strike_plus11_gex[shift_left-2] else Double.Nan;
base_plus11.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus11.setLineWeight(5);
base_plus11.AssignValueColor(if strike_plus11_gex[shift_left-2] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-2)) and AbsValue(strike_plus11_gex[shift_left-2]) > threshold then yes else no, strike_plus11_gex[shift_left-2], strike_plus11_gex[shift_left-2], if strike_plus11_gex[shift_left-2] > 0 then Color.Cyan else Color.RED, if strike_plus11_gex[shift_left-2] > 0 then yes else no);

plot base_plus12 = if BarNumber() == HighestAll(lastbar - (shift_left-3)) then strike_plus12_gex[shift_left-3] else Double.Nan;
base_plus12.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus12.setLineWeight(5);
base_plus12.AssignValueColor(if strike_plus12_gex[shift_left-3] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-3)) and AbsValue(strike_plus12_gex[shift_left-3]) > threshold then yes else no, strike_plus12_gex[shift_left-3], strike_plus12_gex[shift_left-3], if strike_plus12_gex[shift_left-3] > 0 then Color.Cyan else Color.RED, if strike_plus12_gex[shift_left-3] > 0 then yes else no);

plot base_plus13 = if BarNumber() == HighestAll(lastbar - (shift_left-4)) then strike_plus13_gex[shift_left-4] else Double.Nan;
base_plus13.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus13.setLineWeight(5);
base_plus13.AssignValueColor(if strike_plus13_gex[shift_left-4] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-4)) and AbsValue(strike_plus13_gex[shift_left-4]) > threshold then yes else no, strike_plus13_gex[shift_left-4], strike_plus13_gex[shift_left-4], if strike_plus13_gex[shift_left-4] > 0 then Color.Cyan else Color.RED, if strike_plus13_gex[shift_left-4] > 0 then yes else no);

plot base_plus14 = if BarNumber() == HighestAll(lastbar - (shift_left-5)) then strike_plus14_gex[shift_left-5] else Double.Nan;
base_plus14.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus14.setLineWeight(5);
base_plus14.AssignValueColor(if strike_plus14_gex[shift_left-5] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-5)) and AbsValue(strike_plus14_gex[shift_left-5]) > threshold then yes else no, strike_plus14_gex[shift_left-5], strike_plus14_gex[shift_left-5], if strike_plus14_gex[shift_left-5] > 0 then Color.Cyan else Color.RED, if strike_plus14_gex[shift_left-5] > 0 then yes else no);

plot base_plus15 = if BarNumber() == HighestAll(lastbar - (shift_left-6)) then strike_plus15_gex[shift_left-6] else Double.Nan;
base_plus15.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus15.setLineWeight(5);
base_plus15.AssignValueColor(if strike_plus15_gex[shift_left-6] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-6)) and AbsValue(strike_plus15_gex[shift_left-6]) > threshold then yes else no, strike_plus15_gex[shift_left-6], strike_plus15_gex[shift_left-6], if strike_plus15_gex[shift_left-6] > 0 then Color.Cyan else Color.RED, if strike_plus15_gex[shift_left-6] > 0 then yes else no);

plot base_plus16 = if BarNumber() == HighestAll(lastbar - (shift_left-7)) then strike_plus16_gex[shift_left-7] else Double.Nan;
base_plus16.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus16.setLineWeight(5);
base_plus16.AssignValueColor(if strike_plus16_gex[shift_left-7] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-7)) and AbsValue(strike_plus16_gex[shift_left-7]) > threshold then yes else no, strike_plus16_gex[shift_left-7], strike_plus16_gex[shift_left-7], if strike_plus16_gex[shift_left-7] > 0 then Color.Cyan else Color.RED, if strike_plus16_gex[shift_left-7] > 0 then yes else no);

plot base_plus17 = if BarNumber() == HighestAll(lastbar - (shift_left-8)) then strike_plus17_gex[shift_left-8] else Double.Nan;
base_plus17.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus17.setLineWeight(5);
base_plus17.AssignValueColor(if strike_plus17_gex[shift_left-8] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-8)) and AbsValue(strike_plus17_gex[shift_left-8]) > threshold then yes else no, strike_plus17_gex[shift_left-8], strike_plus17_gex[shift_left-8], if strike_plus17_gex[shift_left-8] > 0 then Color.Cyan else Color.RED, if strike_plus17_gex[shift_left-8] > 0 then yes else no);

plot base_plus18 = if BarNumber() == HighestAll(lastbar - (shift_left-9)) then strike_plus18_gex[shift_left-9] else Double.Nan;
base_plus18.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus18.setLineWeight(5);
base_plus18.AssignValueColor(if strike_plus18_gex[shift_left-9] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-9)) and AbsValue(strike_plus18_gex[shift_left-9]) > threshold then yes else no, strike_plus18_gex[shift_left-9], strike_plus18_gex[shift_left-9], if strike_plus18_gex[shift_left-9] > 0 then Color.Cyan else Color.RED, if strike_plus18_gex[shift_left-9] > 0 then yes else no);

plot base_plus19 = if BarNumber() == HighestAll(lastbar - (shift_left-10)) then strike_plus19_gex[shift_left-10] else Double.Nan;
base_plus19.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus19.setLineWeight(5);
base_plus19.AssignValueColor(if strike_plus19_gex[shift_left-10] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-10)) and AbsValue(strike_plus19_gex[shift_left-10]) > threshold then yes else no, strike_plus19_gex[shift_left-10], strike_plus19_gex[shift_left-10], if strike_plus19_gex[shift_left-10] > 0 then Color.Cyan else Color.RED, if strike_plus19_gex[shift_left-10] > 0 then yes else no);

plot base_plus20 = if BarNumber() == HighestAll(lastbar - (shift_left-11)) then strike_plus20_gex[shift_left-11] else Double.Nan;
base_plus20.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_plus20.setLineWeight(5);
base_plus20.AssignValueColor(if strike_plus20_gex[shift_left-11] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-11)) and AbsValue(strike_plus20_gex[shift_left-11]) > threshold then yes else no, strike_plus20_gex[shift_left-11], strike_plus20_gex[shift_left-11], if strike_plus20_gex[shift_left-11] > 0 then Color.Cyan else Color.RED, if strike_plus20_gex[shift_left-11] > 0 then yes else no);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left-11))  then yes else no, 0, strike_plus20, color.gray, if strike_plus20_gex[shift_left-11] > 0 then no else yes);

plot base_minus1 = if BarNumber() == HighestAll(lastbar - (shift_left*11)) then strike_minus1_gex[shift_left*-11] else Double.Nan;
base_minus1.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus1.setLineWeight(5);
base_minus1.AssignValueColor(if strike_minus1_gex[shift_left*-11] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*11)) and AbsValue(strike_minus1_gex[shift_left*-11]) > threshold then yes else no, strike_minus1_gex[shift_left*-11], strike_minus1_gex[shift_left*-11], if strike_minus1_gex[shift_left*-11] > 0 then Color.Cyan else Color.RED, if strike_minus1_gex[shift_left*-11] > 0 then yes else no);

plot base_minus2 = if BarNumber() == HighestAll(lastbar - (shift_left*12)) then strike_minus2_gex[shift_left*-12] else Double.Nan;
base_minus2.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus2.setLineWeight(5);
base_minus2.AssignValueColor(if strike_minus2_gex[shift_left*-12] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*12)) and AbsValue(strike_minus2_gex[shift_left*-12]) > threshold then yes else no, strike_minus2_gex[shift_left*-12], strike_minus2_gex[shift_left*-12], if strike_minus2_gex[shift_left*-12] > 0 then Color.Cyan else Color.RED, if strike_minus2_gex[shift_left*-12] > 0 then yes else no);

plot base_minus3 = if BarNumber() == HighestAll(lastbar - (shift_left*13)) then strike_minus3_gex[shift_left*-13] else Double.Nan;
base_minus3.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus3.setLineWeight(5);
base_minus3.AssignValueColor(if strike_minus3_gex[shift_left*-13] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*13)) and AbsValue(strike_minus3_gex[shift_left*-13]) > threshold  then yes else no, strike_minus3_gex[shift_left*-13], strike_minus3_gex[shift_left*-13], if strike_minus3_gex[shift_left*-13] > 0 then Color.Cyan else Color.RED, if strike_minus3_gex[shift_left*-13] > 0 then yes else no);

plot base_minus4 = if BarNumber() == HighestAll(lastbar - (shift_left*14)) then strike_minus4_gex[shift_left*-14] else Double.Nan;
base_minus4.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus4.setLineWeight(5);
base_minus4.AssignValueColor(if strike_minus4_gex[shift_left*-14] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*14)) and AbsValue(strike_minus4_gex[shift_left*-14]) > threshold  then yes else no, strike_minus4_gex[shift_left*-14], strike_minus4_gex[shift_left*-14], if strike_minus4_gex[shift_left*-14] > 0 then Color.Cyan else Color.RED, if strike_minus4_gex[shift_left*-14] > 0 then yes else no);


plot base_minus5 = if BarNumber() >= HighestAll(lastbar - (shift_left*15)) and  BarNumber() <= HighestAll(lastbar - (shift_left*15)) then strike_minus5_gex[shift_left*-15] else Double.Nan;
base_minus5.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus5.setLineWeight(5);
base_minus5.AssignValueColor(if strike_minus5_gex[shift_left*-15] > 0 then Color.Cyan else Color.RED);

AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*15)) then yes else no, 0, strike_minus5, color.gray, if strike_minus5_gex[shift_left*-15] > 0 then no else yes);

AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*15)) and AbsValue(strike_minus5_gex[shift_left*-15]) > threshold then yes else no, strike_minus5_gex[shift_left*-15], strike_minus5_gex[shift_left*-15], if strike_minus5_gex[shift_left*-15] > 0 then Color.Cyan else Color.RED, if strike_minus5_gex[shift_left*-15] > 0 then yes else no);

plot base_minus6 = if BarNumber() == HighestAll(lastbar - (shift_left*16)) then strike_minus6_gex[shift_left*-16] else Double.Nan;
base_minus6.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus6.setLineWeight(5);
base_minus6.AssignValueColor(if strike_minus6_gex[shift_left*-16] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*16)) and AbsValue(strike_minus6_gex[shift_left*-16]) > threshold then yes else no, strike_minus6_gex[shift_left*-16], strike_minus6_gex[shift_left*-16], if strike_minus6_gex[shift_left*-16] > 0 then Color.Cyan else Color.RED, if strike_minus6_gex[shift_left*-16] > 0 then yes else no);


plot base_minus7 = if BarNumber() >= HighestAll(lastbar - (shift_left*17)) and  BarNumber() <= HighestAll(lastbar - (shift_left*17)) then strike_minus7_gex[shift_left*-17] else Double.Nan;
base_minus7.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus7.setLineWeight(5);
base_minus7.AssignValueColor(if strike_minus7_gex[shift_left*-17] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() >= HighestAll(lastbar - (shift_left*17)) and  BarNumber() <= HighestAll(lastbar - (shift_left*17))and AbsValue(strike_minus7_gex[shift_left*-17]) > threshold then yes else no, strike_minus7_gex[shift_left*-17], strike_minus7_gex[shift_left*-17], if strike_minus7_gex[shift_left*-17] > 0 then Color.Cyan else Color.RED, if strike_minus7_gex[shift_left*-17] > 0 then yes else no);

plot base_minus8 = if BarNumber() == HighestAll(lastbar - (shift_left*18)) then strike_minus8_gex[shift_left*-18] else Double.Nan;
base_minus8.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus8.setLineWeight(5);
base_minus8.AssignValueColor(if strike_minus8_gex[shift_left*-18] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() >= HighestAll(lastbar - (shift_left*18)) and  BarNumber() <= HighestAll(lastbar - (shift_left*18))and AbsValue(strike_minus8_gex[shift_left*-18]) > threshold then yes else no, strike_minus8_gex[shift_left*-18], strike_minus8_gex[shift_left*-18], if strike_minus8_gex[shift_left*-18] > 0 then Color.Cyan else Color.RED, if strike_minus8_gex[shift_left*-18] > 0 then yes else no);

plot base_minus9 = if BarNumber() == HighestAll(lastbar - (shift_left*19)) then strike_minus9_gex[shift_left*-19] else Double.Nan;
base_minus9.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus9.setLineWeight(5);
base_minus9.AssignValueColor(if strike_minus9_gex[shift_left*-19] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*19)) and AbsValue(strike_minus9_gex[shift_left*-19]) > threshold then yes else no, strike_minus9_gex[shift_left*-19], strike_minus9_gex[shift_left*-19], if strike_minus9_gex[shift_left*-19] > 0 then Color.Cyan else Color.RED, if strike_minus9_gex[shift_left*-19] > 0 then yes else no);


plot base_minus10 = if BarNumber() == HighestAll(lastbar - (shift_left*20)) then strike_minus10_gex[shift_left*-20] else Double.Nan;
base_minus10.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus10.setLineWeight(5);
base_minus10.AssignValueColor(if strike_minus10_gex[shift_left*-20] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*20)) and AbsValue(strike_minus10_gex[shift_left*-20]) > threshold  then yes else no, strike_minus10_gex[shift_left*-20],  strike_minus10_gex[shift_left*-20], if strike_minus10_gex[shift_left*-20] > 0 then Color.Cyan else Color.RED, if strike_minus10_gex[shift_left*-20] > 0 then yes else no);
AddChartBubble(if BarNumber() >= HighestAll(lastbar - (shift_left*20)) and  BarNumber() <= HighestAll(lastbar - (shift_left*20)) then yes else no, 0, strike_minus10, color.gray, if strike_minus10 > 0 then yes else no);

plot base_minus11 = if BarNumber() == HighestAll(lastbar - (shift_left*21)) then strike_minus11_gex[shift_left*-21] else Double.Nan;
base_minus11.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus11.setLineWeight(5);
base_minus11.AssignValueColor(if strike_minus11_gex[shift_left*-21] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*21)) and AbsValue(strike_minus11_gex[shift_left*-21]) > threshold then yes else no, strike_minus11_gex[shift_left*-21], strike_minus11_gex[shift_left*-21], if strike_minus11_gex[shift_left*-21] > 0 then Color.Cyan else Color.RED, if strike_minus11_gex[shift_left*-21] > 0 then yes else no);

plot base_minus12 = if BarNumber() == HighestAll(lastbar - (shift_left*22)) then strike_minus12_gex[shift_left*-22] else Double.Nan;
base_minus12.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus12.setLineWeight(5);
base_minus12.AssignValueColor(if strike_minus12_gex[shift_left*-22] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*22)) and AbsValue(strike_minus12_gex[shift_left*-22]) > threshold then yes else no, strike_minus12_gex[shift_left*-22], strike_minus12_gex[shift_left*-22], if strike_minus12_gex[shift_left*-22] > 0 then Color.Cyan else Color.RED, if strike_minus12_gex[shift_left*-22] > 0 then yes else no);

plot base_minus13 = if BarNumber() == HighestAll(lastbar - (shift_left*23)) then strike_minus13_gex[shift_left*-23] else Double.Nan;
base_minus13.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus13.setLineWeight(5);
base_minus13.AssignValueColor(if strike_minus13_gex[shift_left*-23] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*23)) and AbsValue(strike_minus13_gex[shift_left*-23]) > threshold then yes else no, strike_minus13_gex[shift_left*-23], strike_minus13_gex[shift_left*-23], if strike_minus13_gex[shift_left*-23] > 0 then Color.Cyan else Color.RED, if strike_minus13_gex[shift_left*-23] > 0 then yes else no);

plot base_minus14 = if BarNumber() == HighestAll(lastbar - (shift_left*24)) then strike_minus14_gex[shift_left*-24] else Double.Nan;
base_minus14.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus14.setLineWeight(5);
base_minus14.AssignValueColor(if strike_minus14_gex[shift_left*-24] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*24)) and AbsValue(strike_minus14_gex[shift_left*-24]) > threshold then yes else no, strike_minus14_gex[shift_left*-24], strike_minus14_gex[shift_left*-24], if strike_minus14_gex[shift_left*-24] > 0 then Color.Cyan else Color.RED, if strike_minus14_gex[shift_left*-24] > 0 then yes else no);

plot base_minus15 = if BarNumber() == HighestAll(lastbar - (shift_left*25)) then strike_minus15_gex[shift_left*-25] else Double.Nan;
base_minus15.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus15.setLineWeight(5);
base_minus15.AssignValueColor(if strike_minus15_gex[shift_left*-25] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*25)) and AbsValue(strike_minus15_gex[shift_left*-25]) > threshold then yes else no, strike_minus15_gex[shift_left*-25], strike_minus15_gex[shift_left*-25], if strike_minus15_gex[shift_left*-25] > 0 then Color.Cyan else Color.RED, if strike_minus15_gex[shift_left*-25] > 0 then yes else no);

plot base_minus16 = if BarNumber() == HighestAll(lastbar - (shift_left*26)) then strike_minus16_gex[shift_left*-26] else Double.Nan;
base_minus16.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus16.setLineWeight(5);
base_minus16.AssignValueColor(if strike_minus16_gex[shift_left*-26] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*26)) and AbsValue(strike_minus16_gex[shift_left*-26]) > threshold then yes else no, strike_minus16_gex[shift_left*-26], strike_minus16_gex[shift_left*-26], if strike_minus16_gex[shift_left*-26] > 0 then Color.Cyan else Color.RED, if strike_minus16_gex[shift_left*-26] > 0 then yes else no);

plot base_minus17 = if BarNumber() == HighestAll(lastbar - (shift_left*27)) then strike_minus17_gex[shift_left*-27] else Double.Nan;
base_minus17.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus17.setLineWeight(5);
base_minus17.AssignValueColor(if strike_minus17_gex[shift_left*-27] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*27)) and AbsValue(strike_minus17_gex[shift_left*-27]) > threshold then yes else no, strike_minus17_gex[shift_left*-27], strike_minus17_gex[shift_left*-27], if strike_minus17_gex[shift_left*-27] > 0 then Color.Cyan else Color.RED, if strike_minus17_gex[shift_left*-27] > 0 then yes else no);

plot base_minus18 = if BarNumber() == HighestAll(lastbar - (shift_left*28)) then strike_minus18_gex[shift_left*-28] else Double.Nan;
base_minus18.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus18.setLineWeight(5);
base_minus18.AssignValueColor(if strike_minus18_gex[shift_left*-28] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*28)) and AbsValue(strike_minus18_gex[shift_left*-28]) > threshold then yes else no, strike_minus18_gex[shift_left*-28], strike_minus18_gex[shift_left*-28], if strike_minus18_gex[shift_left*-28] > 0 then Color.Cyan else Color.RED, if strike_minus18_gex[shift_left*-28] > 0 then yes else no);

plot base_minus19 = if BarNumber() == HighestAll(lastbar - (shift_left*29)) then strike_minus19_gex[shift_left*-29] else Double.Nan;
base_minus19.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus19.setLineWeight(5);
base_minus19.AssignValueColor(if strike_minus19_gex[shift_left*-29] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*29)) and AbsValue(strike_minus19_gex[shift_left*-29]) > threshold then yes else no, strike_minus19_gex[shift_left*-29], strike_minus19_gex[shift_left*-29], if strike_minus19_gex[shift_left*-29] > 0 then Color.Cyan else Color.RED, if strike_minus19_gex[shift_left*-29] > 0 then yes else no);

plot base_minus20 = if BarNumber() == HighestAll(lastbar - (shift_left*30)) then strike_minus20_gex[shift_left*-30] else Double.Nan;
base_minus20.setPaintingStrategy(PaintingStrategy.HISTOGRAM);
base_minus20.setLineWeight(5);
base_minus20.AssignValueColor(if strike_minus20_gex[shift_left*-30] > 0 then Color.Cyan else Color.RED);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*30)) and AbsValue(strike_minus20_gex[shift_left*-30]) > threshold then yes else no, strike_minus20_gex[shift_left*-30], strike_minus20_gex[shift_left*-30], if strike_minus20_gex[shift_left*-30] > 0 then Color.Cyan else Color.RED, if strike_minus20_gex[shift_left*-30] > 0 then yes else no);
AddChartBubble(if BarNumber() == HighestAll(lastbar - (shift_left*30))  then yes else no, 0, strike_minus20, color.gray, if strike_minus20_gex[shift_left*-30] > 0 then no else yes);

#######
plot zeroline = 0;
zeroline.SetDEfaultColor(color.dark_gray);
