# Gamma Vanna Charm Function Jan 19, 2024
# Twitter @2187Nick
# Verify against this calculator:
# https://perfiliev.co.uk/apps/black-scholes-pricer/

# Still working on the formulas for GEX, CEX, and VEX

declare lower;
#declare once_per_bar;

input strike = 480.0;

# If testing premarket then you can only use the previous days Open Interest
# The Open Interest will update once the market opens.
input PreMarket = {default "false", "true"};
def day = if !PreMarket then 0 else 1;
input ManuallySetExpiration = {default "false", "true"};
input Expiration_YYMMDD = 240126;
def DateString_auto = GetYYYYMMDD() - 20000000;
def DateString = if ManuallySetExpiration then Expiration_YYMMDD else  DateString_auto;
def agg = AggregationPeriod.Day;

def InterestRate = getInterestRate();
def DividendYield = getYield();
addlabel(yes, "InterestRate: " + AsPercent(InterestRate), color.white);
addlabel(yes, "DividendYield: " + AsPercent(DividendYield), color.white);

def seconds_left = SecondsTillTime(1615);
def hours_left = seconds_left / 3600;
def days_left = if hours_left <= 0 then 0 else hours_left / 24;

def Vol = imp_volatility(getSymbol());
addlabel(yes, "Volatility_Percentage: " + AsPercent(Vol), color.white);
def S = close()[day];
#addlabel(yes, "S_close: " + S);

def t = ((DateString - DateString_auto) + days_left) / 365;
addlabel(yes, "days_left:  " + Round(t*365,2));
#def t = 1/365;
def Sqr_Vol_2 = Sqr(Vol)*.5* t;
def Vol_Sqrt_t = Vol * Sqrt(t);
def Vol_Sqrt_t_S = S * Vol_Sqrt_t;

Script GEX {
    input strike = 0;
    input dateString = 0;
    input Vol = 0;
    input t = 0;
    input S = 0;
    input todayoryday = 0;
    input Sqr_Vol_2 = 0;
    input Vol_Sqrt_t = 0;
    input Vol_Sqrt_t_S = 0;
    def d1 = (Log(S / strike) + Sqr_Vol_2) / Vol_Sqrt_t;
    def N1d1 = Exp(-.5*Sqr((Log(S / strike) + Sqr_Vol_2) / Vol_Sqrt_t)) / 2.5066;
    def d2 = d1 - Vol_Sqrt_t;

    # Divide by 365 to get single day value of Charm.
    def charm = -(N1d1 * (( -d2 * Vol_Sqrt_t ) / ( 2 * t * Vol_Sqrt_t)))/365;

    def vanna = -N1d1 * (d2/Vol);

    def gamma = N1d1 / Vol_Sqrt_t_S;

    plot strikeGEX = Round((open_interest("."+ getSymbol() + AsPrice(dateString) + "C" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday] - open_interest("."+ getSymbol() + AsPrice(dateString) + "P" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday]) * gamma*S/1,0);

    def strikeCEX =  Round((open_interest("."+getSymbol()+ AsPrice(DateString) + "C" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday] -  open_interest("."+getSymbol()+AsPrice(DateString) + "P" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday])* charm * S/1,1);

    def strikeVEX =  Round((open_interest("."+getSymbol()+ AsPrice(DateString) + "C" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday] -  open_interest("."+getSymbol()+AsPrice(DateString) + "P" + AsPrice(strike),AggregationPeriod.DAY)[todayoryday])* vanna * S * Vol/1,1);

}

def vanna_test = GEX(strike, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).vanna;
addlabel(yes, strike + "_vanna: " + vanna_test, color.cyan);
def vex_test = GEX(strike, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeVEX;
addlabel(yes, strike + "_vex: " + vex_test, color.violet);

def charm_test = GEX(strike, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).charm;
addlabel(yes, strike + "_charm: " + charm_test, color.yellow);
def cex_test = GEX(strike, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeCEX;
addlabel(yes, strike + "_cex: " + cex_test, color.dark_orange);

def gamma_test = GEX(strike, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).gamma;
addlabel(yes, strike + "_gamma: " + gamma_test, color.green);

plot gex_test = GEX(strike, dateString, Vol, t, S, day, Sqr_Vol_2, Vol_Sqrt_t, Vol_Sqrt_t_S).strikeGex;
addlabel(yes, strike + "_gex: " + gex_test, color.cyan);
