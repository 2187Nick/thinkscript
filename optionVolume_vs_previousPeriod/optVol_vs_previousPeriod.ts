# option_volume vs previous period v1
# Twitter 2187Nick
declare upper;
#declare once_per_bar;
def CurrentYear = GetYear() - 2000;
def CurrentMonth = GetMonth();
def CurrentDOM = GetDayOfMonth(GetYYYYMMDD());

input strikeSpacing = 1;
input percent_minimum = 1000;
def percent_min = percent_minimum/100;
def roundup = no;

DefineGlobalColor("CallColor", Color.GREEN);
DefineGlobalColor("PutColor", Color.RED);
AddLabel(yes,  "Vol: " + AsPrice(GetYear()) + (if CurrentMonth < 10 then Concat(0, (CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0, (CurrentDOM + "C")) else Concat(CurrentDOM, "C")), GlobalColor("CallColor"));
AddLabel(yes,  "Vol: " +  AsPrice(GetYear()) + (if CurrentMonth < 10 then Concat(0, (CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0, (CurrentDOM + "P")) else Concat(CurrentDOM, "P")), GlobalColor("PutColor"));
def agg = GetAggregationPeriod();

def openlevel = close(period = AggregationPeriod.DAY); # AggregationPeriod.day
def floor_or_ceiling = if roundup then Ceil(openlevel / 10) * 10 else Floor(openlevel / 10) * 10;
def PutStrike = floor_or_ceiling;
def CallStrike = floor_or_ceiling;

#AddLabel(yes, "base_stike: " + floor_or_ceiling);

### Put Option Volume
def putOptionVolume = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 0), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 0), agg);

def putOptionVolume1 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 1), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 1), agg);
def putOptionVolume2 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 2), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 2), agg);
def putOptionVolume3 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 3), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 3), agg);
def putOptionVolume4 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 4), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 4), agg);
def putOptionVolume5 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 5), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 5), agg);
def putOptionVolume6 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 6), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 6), agg);
def putOptionVolume7 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 7), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 7), agg);
def putOptionVolume8 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 8), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 8), agg);
def putOptionVolume9 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 9), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 9), agg);
def putOptionVolume10 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 10), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 10), agg);
def putOptionVolume11 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 11), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 11), agg);
def putOptionVolume13 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 12), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 12), agg);
def putOptionVolume12 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 13), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 13), agg);
def putOptionVolume14 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 14), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 14), agg);
def putOptionVolume15 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 15), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 15), agg);
def putOptionVolume16 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 16), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 16), agg);
def putOptionVolume17 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 17), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 17), agg);
def putOptionVolume18 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 18), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 18), agg);
def putOptionVolume19 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 19), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 19), agg);
def putOptionVolume20 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 20), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike - strikeSpacing * 20), agg);

def putOptionVolumea = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 0), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 0), agg);
def putOptionVolume1a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 1), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 1), agg);
def putOptionVolume2a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 2), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 2), agg);
def putOptionVolume3a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 3), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 3), agg);
def putOptionVolume4a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 4), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 4), agg);
def putOptionVolume5a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 5), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 5), agg);
def putOptionVolume6a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 6), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 6), agg);
def putOptionVolume7a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 7), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 7), agg);
def putOptionVolume8a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 8), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 8), agg);
def putOptionVolume9a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 9), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 9), agg);
def putOptionVolume10a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 10), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 10), agg);
def putOptionVolume11a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 11), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 11), agg);
def putOptionVolume13a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 12), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 12), agg);
def putOptionVolume12a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 13), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 13), agg);
def putOptionVolume14a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 14), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 14), agg);
def putOptionVolume15a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 15), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 15), agg);
def putOptionVolume16a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 16), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 16), agg);
def putOptionVolume17a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 17), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 17), agg);
def putOptionVolume18a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 18), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 18), agg);
def putOptionVolume19a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 19), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 19), agg);
def putOptionVolume20a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 20), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"P")) else Concat(CurrentDOM,"P")) + AsPrice(PutStrike + strikeSpacing * 20), agg);

###Call Option Volume
def callOptionVolume = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 0), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 0), agg);

def callOptionVolume1 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 1), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 1), agg);
def callOptionVolume2 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 2), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 2), agg);
def callOptionVolume3 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 3), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 3), agg);
def callOptionVolume4 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 4), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 4), agg);
def callOptionVolume5 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 5), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 5), agg);
def callOptionVolume6 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 6), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 6), agg);
def callOptionVolume7 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 7), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 7), agg);
def callOptionVolume8 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 8), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 8), agg);
def callOptionVolume9 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 9), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 9), agg);
def callOptionVolume10 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 10), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 10), agg);
def callOptionVolume11 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 11), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 11), agg);
def callOptionVolume12 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 12), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 12), agg);
def callOptionVolume13 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 13), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 13), agg);
def callOptionVolume14 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 14), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 14), agg);
def callOptionVolume15 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 15), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 15), agg);
def callOptionVolume16 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 16), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 16), agg);
def callOptionVolume17 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 17), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 17), agg);
def callOptionVolume18 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 18), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 18), agg);
def callOptionVolume19 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 19), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 19), agg);
def callOptionVolume20 = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 20), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike + strikeSpacing * 20), agg);

def callOptionVolumea = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 0), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 0), agg);
def callOptionVolume1a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 1), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 1), agg);
def callOptionVolume2a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 2), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 2), agg);
def callOptionVolume3a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 3), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 3), agg);
def callOptionVolume4a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 4), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 4), agg);
def callOptionVolume5a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 5), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 5), agg);
def callOptionVolume6a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 6), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 6), agg);
def callOptionVolume7a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 7), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 7), agg);
def callOptionVolume8a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 8), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 8), agg);
def callOptionVolume9a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 9), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 9), agg);
def callOptionVolume10a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 10), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 10), agg);
def callOptionVolume11a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 11), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 11), agg);
def callOptionVolume13a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 12), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 12), agg);
def callOptionVolume12a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 13), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 13), agg);
def callOptionVolume14a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 14), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 14), agg);
def callOptionVolume15a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 15), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 15), agg);
def callOptionVolume16a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 16), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 16), agg);
def callOptionVolume17a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 17), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 17), agg);
def callOptionVolume18a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 18), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 18), agg);
def callOptionVolume19a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 19), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 19), agg);
def callOptionVolume20a = if IsNaN(volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 20), agg)) then 0 else volume("." + GetSymbol() + CurrentYear + (if CurrentMonth < 10 then Concat(0,(CurrentMonth)) else AsText(CurrentMonth)) + (if CurrentDOM < 10 then Concat(0,(CurrentDOM+"C")) else Concat(CurrentDOM,"C")) + AsPrice(CallStrike - strikeSpacing * 20), agg);


def atmcallstrike = CallStrike;
def otmcallstrike1 = CallStrike + strikeSpacing;
def otmcallstrike2 = CallStrike + strikeSpacing * 2;
def otmcallstrike3 = CallStrike + strikeSpacing * 3;
def otmcallstrike4 = CallStrike + strikeSpacing * 4;
def otmcallstrike5 = CallStrike + strikeSpacing * 5;
def otmcallstrike6 = CallStrike + strikeSpacing * 6;
def otmcallstrike7 = CallStrike + strikeSpacing * 7;
def otmcallstrike8 = CallStrike + strikeSpacing * 8;
def otmcallstrike9 = CallStrike + strikeSpacing * 9;
def otmcallstrike10 = CallStrike + strikeSpacing * 10;
def otmcallstrike11 = CallStrike + strikeSpacing * 11;
def otmcallstrike12 = CallStrike + strikeSpacing * 12;
def otmcallstrike13 = CallStrike + strikeSpacing * 13;
def otmcallstrike14 = CallStrike + strikeSpacing * 14;
def otmcallstrike15 = CallStrike + strikeSpacing * 15;
def otmcallstrike16 = CallStrike + strikeSpacing * 16;
def otmcallstrike17 = CallStrike + strikeSpacing * 17;
def otmcallstrike18 = CallStrike + strikeSpacing * 18;
def otmcallstrike19 = CallStrike + strikeSpacing * 19;
def otmcallstrike20 = CallStrike + strikeSpacing * 20;

def itmcallstrike1 = CallStrike - strikeSpacing;
def itmcallstrike2 = CallStrike - strikeSpacing * 2;
def itmcallstrike3 = CallStrike - strikeSpacing * 3;
def itmcallstrike4 = CallStrike - strikeSpacing * 4;
def itmcallstrike5 = CallStrike - strikeSpacing * 5;
def itmcallstrike6 = CallStrike - strikeSpacing * 6;
def itmcallstrike7 = CallStrike - strikeSpacing * 7;
def itmcallstrike8 = CallStrike - strikeSpacing * 8;
def itmcallstrike9 = CallStrike - strikeSpacing * 9;
def itmcallstrike10 = CallStrike - strikeSpacing * 10;
def itmcallstrike11 = CallStrike - strikeSpacing * 11;
def itmcallstrike12 = CallStrike - strikeSpacing * 12;
def itmcallstrike13 = CallStrike - strikeSpacing * 13;
def itmcallstrike14 = CallStrike - strikeSpacing * 14;
def itmcallstrike15 = CallStrike - strikeSpacing * 15;
def itmcallstrike16 = CallStrike - strikeSpacing * 16;
def itmcallstrike17 = CallStrike - strikeSpacing * 17;
def itmcallstrike18 = CallStrike - strikeSpacing * 18;
def itmcallstrike19 = CallStrike - strikeSpacing * 19;
def itmcallstrike20 = CallStrike - strikeSpacing * 20;

plot lineatm = CallStrike;
plot lineotmp = CallStrike - strikeSpacing;
plot lineitmp = CallStrike + strikeSpacing;
plot lineotmp1 = CallStrike - strikeSpacing * 2;
plot lineitmp1 = CallStrike + strikeSpacing * 2;
plot lineotmp2 = CallStrike - strikeSpacing * 3;
plot lineitmp2 = CallStrike + strikeSpacing * 3;
plot lineotmp3 = CallStrike - strikeSpacing * 4;
plot lineitmp3 = CallStrike + strikeSpacing * 4;
plot lineotmp4 = CallStrike - strikeSpacing * 5;
plot lineitmp4 = CallStrike + strikeSpacing * 5;
plot lineotmp5 = CallStrike - strikeSpacing * 6;
plot lineitmp5 = CallStrike + strikeSpacing * 6;
plot lineotmp6 = CallStrike - strikeSpacing * 7;
plot lineitmp6 = CallStrike + strikeSpacing * 7;
plot lineotmp7 = CallStrike - strikeSpacing * 8;
plot lineitmp7 = CallStrike + strikeSpacing * 8;
plot lineotmp8 = CallStrike - strikeSpacing * 9;
plot lineitmp8 = CallStrike + strikeSpacing * 9;
plot lineotmp9 = CallStrike - strikeSpacing * 10;
plot lineitmp9 = CallStrike + strikeSpacing * 10;
plot lineotmp10 = CallStrike - strikeSpacing * 11;
plot lineitmp10 = CallStrike + strikeSpacing * 11;
plot lineotmp11 = CallStrike - strikeSpacing * 12;
plot lineitmp11 = CallStrike + strikeSpacing * 12;
plot lineotmp12 = CallStrike - strikeSpacing * 13;
plot lineitmp12 = CallStrike + strikeSpacing * 13;
plot lineotmp13 = CallStrike - strikeSpacing * 14;
plot lineitmp13 = CallStrike + strikeSpacing * 14;
plot lineotmp14 = CallStrike - strikeSpacing * 15;
plot lineitmp14 = CallStrike + strikeSpacing * 15;
plot lineotmp15 = CallStrike - strikeSpacing * 16;
plot lineitmp15 = CallStrike + strikeSpacing * 16;
plot lineotmp16 = CallStrike - strikeSpacing * 17;
plot lineitmp16 = CallStrike + strikeSpacing * 17;
plot lineotmp17 = CallStrike - strikeSpacing * 18;
plot lineitmp17 = CallStrike + strikeSpacing * 18;
plot lineotmp18 = CallStrike - strikeSpacing * 19;
plot lineitmp18 = CallStrike + strikeSpacing * 19;
plot lineotmp19 = CallStrike - strikeSpacing * 20;
plot lineitmp19 = CallStrike + strikeSpacing * 20;


lineatm.SetDefaultColor(Color.Blue);
lineitmp.SetDefaultColor(Color.Dark_Gray);
lineotmp.SetDefaultColor(Color.Dark_Gray);
lineitmp1.SetDefaultColor(Color.Dark_Gray);
lineotmp1.SetDefaultColor(Color.Dark_Gray);
lineitmp2.SetDefaultColor(Color.Dark_Gray);
lineotmp2.SetDefaultColor(Color.Dark_Gray);
lineitmp3.SetDefaultColor(Color.Dark_Gray);
lineotmp3.SetDefaultColor(Color.Dark_Gray);
lineitmp4.SetDefaultColor(Color.Dark_Gray);
lineotmp4.SetDefaultColor(Color.Dark_Gray);
lineitmp5.SetDefaultColor(Color.Dark_Gray);
lineotmp5.SetDefaultColor(Color.Dark_Gray);
lineitmp6.SetDefaultColor(Color.Dark_Gray);
lineotmp6.SetDefaultColor(Color.Dark_Gray);
lineitmp7.SetDefaultColor(Color.Dark_Gray);
lineotmp7.SetDefaultColor(Color.Dark_Gray);
lineitmp8.SetDefaultColor(Color.Dark_Gray);
lineotmp8.SetDefaultColor(Color.Dark_Gray);
lineitmp9.SetDefaultColor(Color.Dark_Gray);
lineotmp9.SetDefaultColor(Color.Dark_Gray);
lineitmp10.SetDefaultColor(Color.Dark_Gray);
lineotmp10.SetDefaultColor(Color.Dark_Gray);
lineitmp11.SetDefaultColor(Color.Dark_Gray);
lineotmp11.SetDefaultColor(Color.Dark_Gray);
lineitmp12.SetDefaultColor(Color.Dark_Gray);
lineotmp12.SetDefaultColor(Color.Dark_Gray);
lineitmp13.SetDefaultColor(Color.Dark_Gray);
lineotmp13.SetDefaultColor(Color.Dark_Gray);
lineitmp14.SetDefaultColor(Color.Dark_Gray);
lineotmp14.SetDefaultColor(Color.Dark_Gray);
lineitmp15.SetDefaultColor(Color.Dark_Gray);
lineotmp15.SetDefaultColor(Color.Dark_Gray);
lineitmp16.SetDefaultColor(Color.Dark_Gray);
lineotmp16.SetDefaultColor(Color.Dark_Gray);
lineitmp17.SetDefaultColor(Color.Dark_Gray);
lineotmp17.SetDefaultColor(Color.Dark_Gray);
lineitmp18.SetDefaultColor(Color.Dark_Gray);
lineotmp18.SetDefaultColor(Color.Dark_Gray);
lineitmp19.SetDefaultColor(Color.Dark_Gray);
lineotmp19.SetDefaultColor(Color.Dark_Gray);

AddLabel(callOptionVolume20a / callOptionVolume20a[1] > percent_min and callOptionVolume20a[1] > 0,  itmcallstrike20 + "C: " + Round(callOptionVolume20a * 100 / callOptionVolume20a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume20 / putOptionVolume20[1] > percent_min and putOptionVolume20[1] > 0,  itmcallstrike20 + "P: " + Round(putOptionVolume20 * 100 / putOptionVolume20[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume19a / callOptionVolume19a[1] > percent_min and callOptionVolume19a[1] > 0,  itmcallstrike19 + "C: " + Round(callOptionVolume19a * 100 / callOptionVolume19a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume19 / putOptionVolume19[1] > percent_min and putOptionVolume19[1] > 0,  itmcallstrike19 + "P: " + Round(putOptionVolume19 * 100 / putOptionVolume19[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume18a / callOptionVolume18a[1] > percent_min and callOptionVolume18a[1] > 0,  itmcallstrike18 + "C: " + Round(callOptionVolume18a * 100 / callOptionVolume18a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume18 / putOptionVolume18[1] > percent_min and putOptionVolume18[1] > 0,  itmcallstrike18 + "P: " + Round(putOptionVolume18 * 100 / putOptionVolume18[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume17a / callOptionVolume17a[1] > percent_min and callOptionVolume17a[1] > 0,  itmcallstrike17 + "C: " + Round(callOptionVolume17a * 100 / callOptionVolume17a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume17 / putOptionVolume17[1] > percent_min and putOptionVolume17[1] > 0,  itmcallstrike17 + "P: " + Round(putOptionVolume17 * 100 / putOptionVolume17[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume16a / callOptionVolume16a[1] > percent_min and callOptionVolume16a[1] > 0,  itmcallstrike16 + "C: " + Round(callOptionVolume16a * 100 / callOptionVolume16a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume16 / putOptionVolume16[1] > percent_min and putOptionVolume16[1] > 0,  itmcallstrike16 + "P: " + Round(putOptionVolume16 * 100 / putOptionVolume16[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume15a / callOptionVolume15a[1] > percent_min and callOptionVolume15a[1] > 0,  itmcallstrike15 + "C: " + Round(callOptionVolume15a * 100 / callOptionVolume15a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume15 / putOptionVolume15[1] > percent_min and putOptionVolume15[1] > 0,  itmcallstrike15 + "P: " + Round(putOptionVolume15 * 100 / putOptionVolume15[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume14a / callOptionVolume14a[1] > percent_min and callOptionVolume14a[1] > 0,  itmcallstrike14 + "C: " + Round(callOptionVolume14a * 100 / callOptionVolume14a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume14 / putOptionVolume14[1] > percent_min and putOptionVolume14[1] > 0,  itmcallstrike14 + "P: " + Round(putOptionVolume14 * 100 / putOptionVolume14[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume13a / callOptionVolume13a[1] > percent_min and callOptionVolume13a[1] > 0,  itmcallstrike13 + "C: " + Round(callOptionVolume13a * 100 / callOptionVolume13a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume13 / putOptionVolume13[1] > percent_min and putOptionVolume13[1] > 0,  itmcallstrike13 + "P: " + Round(putOptionVolume13 * 100 / putOptionVolume13[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume12a / callOptionVolume12a[1] > percent_min and callOptionVolume12a[1] > 0,  itmcallstrike12 + "C: " + Round(callOptionVolume12a * 100 / callOptionVolume12a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume12 / putOptionVolume12[1] > percent_min and putOptionVolume12[1] > 0,  itmcallstrike12 + "P: " + Round(putOptionVolume12 * 100 / putOptionVolume12[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume11a / callOptionVolume11a[1] > percent_min and callOptionVolume11a[1] > 0,  itmcallstrike11 + "C: " + Round(callOptionVolume11a * 100 / callOptionVolume11a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume11 / putOptionVolume11[1] > percent_min and putOptionVolume11[1] > 0,  itmcallstrike11 + "P: " + Round(putOptionVolume11 * 100 / putOptionVolume11[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume10a / callOptionVolume10a[1] > percent_min and callOptionVolume10a[1] > 0,  itmcallstrike10 + "C: " + Round(callOptionVolume10a * 100 / callOptionVolume10a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume10 / putOptionVolume10[1] > percent_min and putOptionVolume10[1] > 0,  itmcallstrike10 + "P: " + Round(putOptionVolume10 * 100 / putOptionVolume10[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume9a / callOptionVolume9a[1] > percent_min and callOptionVolume9a[1] > 0,  itmcallstrike9 + "C: " + Round(callOptionVolume9a * 100 / callOptionVolume9a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume9 / putOptionVolume9[1] > percent_min and putOptionVolume9[1] > 0,  itmcallstrike9 + "P: " + Round(putOptionVolume9 * 100 / putOptionVolume9[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume8a / callOptionVolume8a[1] > percent_min and callOptionVolume8a[1] > 0,  itmcallstrike8 + "C: " + Round(callOptionVolume8a * 100 / callOptionVolume8a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume8 / putOptionVolume8[1] > percent_min and putOptionVolume8[1] > 0,  itmcallstrike8 + "P: " + Round(putOptionVolume8 * 100 / putOptionVolume8[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume7a / callOptionVolume7a[1] > percent_min and callOptionVolume7a[1] > 0,  itmcallstrike7 + "C: " + Round(callOptionVolume7a * 100 / callOptionVolume7a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume7 / putOptionVolume7[1] > percent_min and putOptionVolume7[1] > 0,  itmcallstrike7 + "P: " + Round(putOptionVolume7 * 100 / putOptionVolume7[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume6a / callOptionVolume6a[1] > percent_min and callOptionVolume6a[1] > 0,  itmcallstrike6 + "C: " + Round(callOptionVolume6a * 100 / callOptionVolume6a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume6 / putOptionVolume6[1] > percent_min and putOptionVolume6[1] > 0,  itmcallstrike6 + "P: " + Round(putOptionVolume6 * 100 / putOptionVolume6[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume5a / callOptionVolume5a[1] > percent_min and callOptionVolume5a[1] > 0,  itmcallstrike5 + "C: " + Round(callOptionVolume5a * 100 / callOptionVolume5a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume5 / putOptionVolume5[1] > percent_min and putOptionVolume5[1] > 0,  itmcallstrike5 + "P: " + Round(putOptionVolume5 * 100 / putOptionVolume5[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume4a / callOptionVolume4a[1] > percent_min and callOptionVolume4a[1] > 0,  itmcallstrike4 + "C: " + Round(callOptionVolume4a * 100 / callOptionVolume4a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume4 / putOptionVolume4[1] > percent_min and putOptionVolume4[1] > 0,  itmcallstrike4 + "P: " + Round(putOptionVolume4 * 100 / putOptionVolume4[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume3a / callOptionVolume3a[1] > percent_min and callOptionVolume3a[1] > 0,  itmcallstrike3 + "C: " + Round(callOptionVolume3a * 100 / callOptionVolume3a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume3 / putOptionVolume3[1] > percent_min and putOptionVolume3[1] > 0,  itmcallstrike3 + "P: " + Round(putOptionVolume3 * 100 / putOptionVolume3[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume2a / callOptionVolume2a[1] > percent_min and callOptionVolume2a[1] > 0,  itmcallstrike2 + "C: " + Round(callOptionVolume2a * 100 / callOptionVolume2a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume2 / putOptionVolume2[1] > percent_min and putOptionVolume2[1] > 0,  itmcallstrike2 + "P: " + Round(putOptionVolume2 * 100 / putOptionVolume2[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume1a / callOptionVolume1a[1] > percent_min and callOptionVolume1a[1] > 0,  itmcallstrike1 + "C: " + Round(callOptionVolume1a * 100 / callOptionVolume1a[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume1 / putOptionVolume1[1] > percent_min and putOptionVolume1[1] > 0,  itmcallstrike1 + "P: " + Round(putOptionVolume1 * 100 / putOptionVolume1[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume / callOptionVolume[1] > percent_min and callOptionVolume[1] > 0, atmcallstrike + "C: " + Round(callOptionVolume * 100 / callOptionVolume[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume / putOptionVolume[1] > percent_min and putOptionVolume[1] > 0, atmcallstrike + "P: " + Round(putOptionVolume * 100 / putOptionVolume[1], 0) + "%", GlobalColor("PutColor"));

AddLabel(callOptionVolume1 / callOptionVolume1[1] > percent_min and callOptionVolume1[1] > 0,  otmcallstrike1 + "C: " + Round(callOptionVolume1 * 100 / callOptionVolume1[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume1a / putOptionVolume1a[1] > percent_min and putOptionVolume1a[1] > 0,  otmcallstrike1 + "P: " + Round(putOptionVolume1a * 100 / putOptionVolume1a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume2 / callOptionVolume2[1] > percent_min and callOptionVolume2[1] > 0,  otmcallstrike2 + "C: " + Round(callOptionVolume2 * 100 / callOptionVolume2[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume2a / putOptionVolume2a[1] > percent_min and putOptionVolume2a[1] > 0,  otmcallstrike2 + "P: " + Round(putOptionVolume2a * 100 / putOptionVolume2a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume3 / callOptionVolume3[1] > percent_min and callOptionVolume3[1] > 0,  otmcallstrike3 + "C: " + Round(callOptionVolume3 * 100 / callOptionVolume3[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume3a / putOptionVolume3a[1] > percent_min and putOptionVolume3a[1] > 0,  otmcallstrike3 + "P: " + Round(putOptionVolume3a * 100 / putOptionVolume3a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume4 / callOptionVolume4[1] > percent_min and callOptionVolume4[1] > 0,  otmcallstrike4 + "C: " + Round(callOptionVolume4 * 100 / callOptionVolume4[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume4a / putOptionVolume4a[1] > percent_min and putOptionVolume4a[1] > 0,  otmcallstrike4 + "P: " + Round(putOptionVolume4a * 100 / putOptionVolume4a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume5 / callOptionVolume5[1] > percent_min and callOptionVolume5[1] > 0,  otmcallstrike5 + "C: " + Round(callOptionVolume5 * 100 / callOptionVolume5[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume5a / putOptionVolume5a[1] > percent_min and putOptionVolume5a[1] > 0,  otmcallstrike5 + "P: " + Round(putOptionVolume5a * 100 / putOptionVolume5a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume6 / callOptionVolume6[1] > percent_min and callOptionVolume6[1] > 0,  otmcallstrike6 + "C: " + Round(callOptionVolume6 * 100 / callOptionVolume6[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume6a / putOptionVolume6a[1] > percent_min and putOptionVolume6a[1] > 0,  otmcallstrike6 + "P: " + Round(putOptionVolume6a * 100 / putOptionVolume6a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume7 / callOptionVolume7[1] > percent_min and callOptionVolume7[1] > 0,  otmcallstrike7 + "C: " + Round(callOptionVolume7 * 100 / callOptionVolume7[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume7a / putOptionVolume7a[1] > percent_min and putOptionVolume7a[1] > 0,  otmcallstrike7 + "P: " + Round(putOptionVolume7a * 100 / putOptionVolume7a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume8 / callOptionVolume8[1] > percent_min and callOptionVolume8[1] > 0,  otmcallstrike8 + "C: " + Round(callOptionVolume8 * 100 / callOptionVolume8[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume8a / putOptionVolume8a[1] > percent_min and putOptionVolume8a[1] > 0,  otmcallstrike8 + "P: " + Round(putOptionVolume8a * 100 / putOptionVolume8a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume9 / callOptionVolume9[1] > percent_min and callOptionVolume9[1] > 0,  otmcallstrike9 + "C: " + Round(callOptionVolume9 * 100 / callOptionVolume9[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume9a / putOptionVolume9a[1] > percent_min and putOptionVolume9a[1] > 0,  otmcallstrike9 + "P: " + Round(putOptionVolume9a * 100 / putOptionVolume9a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume10 / callOptionVolume10[1] > percent_min and callOptionVolume10[1] > 0,  otmcallstrike10 + "C: " + Round(callOptionVolume10 * 100 / callOptionVolume10[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume10a / putOptionVolume10a[1] > percent_min and putOptionVolume10a[1] > 0,  otmcallstrike10 + "P: " + Round(putOptionVolume10a * 100 / putOptionVolume10a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume11 / callOptionVolume11[1] > percent_min and callOptionVolume11[1] > 0,  otmcallstrike11 + "C: " + Round(callOptionVolume11 * 100 / callOptionVolume11[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume11a / putOptionVolume11a[1] > percent_min and putOptionVolume11a[1] > 0,  otmcallstrike11 + "P: " + Round(putOptionVolume11a * 100 / putOptionVolume11a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume12 / callOptionVolume12[1] > percent_min and callOptionVolume12[1] > 0,  otmcallstrike12 + "C: " + Round(callOptionVolume12 * 100 / callOptionVolume12[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume12a / putOptionVolume12a[1] > percent_min and putOptionVolume12a[1] > 0,  otmcallstrike12 + "P: " + Round(putOptionVolume12a * 100 / putOptionVolume12a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume13 / callOptionVolume13[1] > percent_min and callOptionVolume13[1] > 0,  otmcallstrike13 + "C: " + Round(callOptionVolume13 * 100 / callOptionVolume13[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume13a / putOptionVolume13a[1] > percent_min and putOptionVolume13a[1] > 0,  otmcallstrike13 + "P: " + Round(putOptionVolume13a * 100 / putOptionVolume13a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume14 / callOptionVolume14[1] > percent_min and callOptionVolume14[1] > 0,  otmcallstrike14 + "C: " + Round(callOptionVolume14 * 100 / callOptionVolume14[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume14a / putOptionVolume14a[1] > percent_min and putOptionVolume14a[1] > 0,  otmcallstrike14 + "P: " + Round(putOptionVolume14a * 100 / putOptionVolume14a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume15 / callOptionVolume15[1] > percent_min and callOptionVolume15[1] > 0,  otmcallstrike15 + "C: " + Round(callOptionVolume15 * 100 / callOptionVolume15[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume15a / putOptionVolume15a[1] > percent_min and putOptionVolume15a[1] > 0,  otmcallstrike15 + "P: " + Round(putOptionVolume15a * 100 / putOptionVolume15a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume16 / callOptionVolume16[1] > percent_min and callOptionVolume16[1] > 0,  otmcallstrike16 + "C: " + Round(callOptionVolume16 * 100 / callOptionVolume16[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume16a / putOptionVolume16a[1] > percent_min and putOptionVolume16a[1] > 0,  otmcallstrike16 + "P: " + Round(putOptionVolume16a * 100 / putOptionVolume16a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume17 / callOptionVolume17[1] > percent_min and callOptionVolume17[1] > 0,  otmcallstrike17 + "C: " + Round(callOptionVolume17 * 100 / callOptionVolume17[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume17a / putOptionVolume17a[1] > percent_min and putOptionVolume17a[1] > 0,  otmcallstrike17 + "P: " + Round(putOptionVolume17a * 100 / putOptionVolume17a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume18 / callOptionVolume18[1] > percent_min and callOptionVolume18[1] > 0,  otmcallstrike18 + "C: " + Round(callOptionVolume18 * 100 / callOptionVolume18[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume18a / putOptionVolume18a[1] > percent_min and putOptionVolume18a[1] > 0,  otmcallstrike18 + "P: " + Round(putOptionVolume18a * 100 / putOptionVolume18a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume19 / callOptionVolume19[1] > percent_min and callOptionVolume19[1] > 0,  otmcallstrike19 + "C: " + Round(callOptionVolume19 * 100 / callOptionVolume19[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume19a / putOptionVolume19a[1] > percent_min and putOptionVolume19a[1] > 0,  otmcallstrike19 + "P: " + Round(putOptionVolume19a * 100 / putOptionVolume19a[1], 0) + "%", GlobalColor("PutColor"));
AddLabel(callOptionVolume20 / callOptionVolume20[1] > percent_min and callOptionVolume20[1] > 0,  otmcallstrike20 + "C: " + Round(callOptionVolume20 * 100 / callOptionVolume20[1], 0) + "%", GlobalColor("CallColor"));
AddLabel(putOptionVolume20a / putOptionVolume20a[1] > percent_min and putOptionVolume20a[1] > 0,  otmcallstrike20 + "P: " + Round(putOptionVolume20a * 100 / putOptionVolume20a[1], 0) + "%", GlobalColor("PutColor"));


#########################
addchartbubble(callOptionVolume1/callOptionVolume1[1] > percent_min and callOptionVolume1[1] > 0,  otmcallstrike1 , Round(callOptionVolume1*100/callOptionVolume1[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume2/callOptionVolume2[1] > percent_min and callOptionVolume2[1] > 0,  otmcallstrike2 , Round(callOptionVolume2*100/callOptionVolume2[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume3/callOptionVolume3[1] > percent_min and callOptionVolume3[1] > 0,  otmcallstrike3 , Round(callOptionVolume3*100/callOptionVolume3[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume4/callOptionVolume4[1] > percent_min and callOptionVolume4[1] > 0,  otmcallstrike4 , Round(callOptionVolume4*100/callOptionVolume4[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume5/callOptionVolume5[1] > percent_min and callOptionVolume5[1] > 0,  otmcallstrike5 , Round(callOptionVolume5*100/callOptionVolume5[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume6/callOptionVolume6[1] > percent_min and callOptionVolume6[1] > 0,  otmcallstrike6 , Round(callOptionVolume6*100/callOptionVolume6[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume7/callOptionVolume7[1] > percent_min and callOptionVolume7[1] > 0,  otmcallstrike7 , Round(callOptionVolume7*100/callOptionVolume7[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume8/callOptionVolume8[1] > percent_min and callOptionVolume8[1] > 0,  otmcallstrike8 , Round(callOptionVolume8*100/callOptionVolume8[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume9/callOptionVolume9[1] > percent_min and callOptionVolume9[1] > 0,  otmcallstrike9 , Round(callOptionVolume9*100/callOptionVolume9[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume10/callOptionVolume10[1] > percent_min and callOptionVolume10[1] > 0,  otmcallstrike10 , Round(callOptionVolume10*100/callOptionVolume10[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume11/callOptionVolume11[1] > percent_min and callOptionVolume11[1] > 0,  otmcallstrike11 , Round(callOptionVolume11*100/callOptionVolume11[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume12/callOptionVolume12[1] > percent_min and callOptionVolume12[1] > 0,  otmcallstrike12 , Round(callOptionVolume12*100/callOptionVolume12[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume13/callOptionVolume13[1] > percent_min and callOptionVolume13[1] > 0,  otmcallstrike13 , Round(callOptionVolume13*100/callOptionVolume13[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume14/callOptionVolume14[1] > percent_min and callOptionVolume14[1] > 0,  otmcallstrike14 , Round(callOptionVolume14*100/callOptionVolume14[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume15/callOptionVolume15[1] > percent_min and callOptionVolume15[1] > 0,  otmcallstrike15 , Round(callOptionVolume15*100/callOptionVolume15[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume16/callOptionVolume16[1] > percent_min and callOptionVolume16[1] > 0,  otmcallstrike16 , Round(callOptionVolume16*100/callOptionVolume16[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume17/callOptionVolume17[1] > percent_min and callOptionVolume17[1] > 0,  otmcallstrike17 , Round(callOptionVolume17*100/callOptionVolume17[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume18/callOptionVolume18[1] > percent_min and callOptionVolume18[1] > 0,  otmcallstrike18 , Round(callOptionVolume18*100/callOptionVolume18[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume19/callOptionVolume19[1] > percent_min and callOptionVolume19[1] > 0,  otmcallstrike19 , Round(callOptionVolume19*100/callOptionVolume19[1], 0)+"%", globalColor("CallColor"), Yes);
addchartbubble(callOptionVolume20/callOptionVolume20[1] > percent_min and callOptionVolume20[1] > 0,  otmcallstrike20 , Round(callOptionVolume20*100/callOptionVolume20[1], 0)+"%", globalColor("CallColor"), Yes);


AddChartBubble(callOptionVolume1a / callOptionVolume1a[1] > percent_min and callOptionVolume1a[1] > 0,  itmcallstrike1 , Round(callOptionVolume1a * 100 / callOptionVolume1a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume2a / callOptionVolume2a[1] > percent_min and callOptionVolume2a[1] > 0,  itmcallstrike2 , Round(callOptionVolume2a * 100 / callOptionVolume2a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume3a / callOptionVolume3a[1] > percent_min and callOptionVolume3a[1] > 0,  itmcallstrike3 , Round(callOptionVolume3a * 100 / callOptionVolume3a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume4a / callOptionVolume4a[1] > percent_min and callOptionVolume4a[1] > 0,  itmcallstrike4 , Round(callOptionVolume4a * 100 / callOptionVolume4a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume5a / callOptionVolume5a[1] > percent_min and callOptionVolume5a[1] > 0,  itmcallstrike5 , Round(callOptionVolume5a * 100 / callOptionVolume5a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume6a / callOptionVolume6a[1] > percent_min and callOptionVolume6a[1] > 0,  itmcallstrike6 , Round(callOptionVolume6a * 100 / callOptionVolume6a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume7a / callOptionVolume7a[1] > percent_min and callOptionVolume7a[1] > 0,  itmcallstrike7 , Round(callOptionVolume7a * 100 / callOptionVolume7a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume8a / callOptionVolume8a[1] > percent_min and callOptionVolume8a[1] > 0,  itmcallstrike8 , Round(callOptionVolume8a * 100 / callOptionVolume8a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume9a / callOptionVolume9a[1] > percent_min and callOptionVolume9a[1] > 0,  itmcallstrike9 , Round(callOptionVolume9a * 100 / callOptionVolume9a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume10a / callOptionVolume10a[1] > percent_min and callOptionVolume10a[1] > 0,  itmcallstrike10 , Round(callOptionVolume10a * 100 / callOptionVolume10a[1], 0) + "%", GlobalColor("CallColor"), yes);

AddChartBubble(callOptionVolume11a / callOptionVolume11a[1] > percent_min and callOptionVolume11a[1] > 0,  itmcallstrike11 , Round(callOptionVolume11a * 100 / callOptionVolume11a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume12a / callOptionVolume12a[1] > percent_min and callOptionVolume12a[1] > 0,  itmcallstrike12 , Round(callOptionVolume12a * 100 / callOptionVolume12a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume13a / callOptionVolume13a[1] > percent_min and callOptionVolume13a[1] > 0,  itmcallstrike13 , Round(callOptionVolume13a * 100 / callOptionVolume13a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume14a / callOptionVolume14a[1] > percent_min and callOptionVolume14a[1] > 0,  itmcallstrike14 , Round(callOptionVolume14a * 100 / callOptionVolume14a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume15a / callOptionVolume15a[1] > percent_min and callOptionVolume15a[1] > 0,  itmcallstrike15 , Round(callOptionVolume15a * 100 / callOptionVolume15a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume16a / callOptionVolume16a[1] > percent_min and callOptionVolume16a[1] > 0,  itmcallstrike16 , Round(callOptionVolume16a * 100 / callOptionVolume16a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume17a / callOptionVolume17a[1] > percent_min and callOptionVolume17a[1] > 0,  itmcallstrike17 , Round(callOptionVolume17a * 100 / callOptionVolume17a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume18a / callOptionVolume18a[1] > percent_min and callOptionVolume18a[1] > 0,  itmcallstrike18 , Round(callOptionVolume18a * 100 / callOptionVolume18a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume19a / callOptionVolume19a[1] > percent_min and callOptionVolume19a[1] > 0,  itmcallstrike19 , Round(callOptionVolume19a * 100 / callOptionVolume19a[1], 0) + "%", GlobalColor("CallColor"), yes);
AddChartBubble(callOptionVolume20a / callOptionVolume20a[1] > percent_min and callOptionVolume20a[1] > 0,  itmcallstrike20 , Round(callOptionVolume20a * 100 / callOptionVolume20a[1], 0) + "%", GlobalColor("CallColor"), yes);


AddChartBubble(putOptionVolume / putOptionVolume[1] > percent_min and putOptionVolume[1] > 0, atmcallstrike, Round(putOptionVolume * 100 / putOptionVolume[1], 0) + "%", GlobalColor("PutColor"), no);

AddChartBubble(putOptionVolume1a / putOptionVolume1a[1] > percent_min and putOptionVolume1a[1] > 0,  otmcallstrike1 , Round(putOptionVolume1a * 100 / putOptionVolume1a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume2a / putOptionVolume2a[1] > percent_min and putOptionVolume2a[1] > 0,  otmcallstrike2 , Round(putOptionVolume2a * 100 / putOptionVolume2a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume3a / putOptionVolume3a[1] > percent_min and putOptionVolume3a[1] > 0,  otmcallstrike3 , Round(putOptionVolume3a * 100 / putOptionVolume3a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume4a / putOptionVolume4a[1] > percent_min and putOptionVolume4a[1] > 0,  otmcallstrike4 , Round(putOptionVolume4a * 100 / putOptionVolume4a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume5a / putOptionVolume5a[1] > percent_min and putOptionVolume5a[1] > 0,  otmcallstrike5 , Round(putOptionVolume5a * 100 / putOptionVolume5a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume6a / putOptionVolume6a[1] > percent_min and putOptionVolume6a[1] > 0,  otmcallstrike6 , Round(putOptionVolume6a * 100 / putOptionVolume6a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume7a / putOptionVolume7a[1] > percent_min and putOptionVolume7a[1] > 0,  otmcallstrike7 , Round(putOptionVolume7a * 100 / putOptionVolume7a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume8a / putOptionVolume8a[1] > percent_min and putOptionVolume8a[1] > 0,  otmcallstrike8 , Round(putOptionVolume8a * 100 / putOptionVolume8a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume9a / putOptionVolume9a[1] > percent_min and putOptionVolume9a[1] > 0,  otmcallstrike9 , Round(putOptionVolume9a * 100 / putOptionVolume9a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume10a / putOptionVolume10a[1] > percent_min and putOptionVolume10a[1] > 0,  otmcallstrike10 , Round(putOptionVolume10a * 100 / putOptionVolume10a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume11a / putOptionVolume11a[1] > percent_min and putOptionVolume11a[1] > 0,  otmcallstrike11 , Round(putOptionVolume11a * 100 / putOptionVolume11a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume12a / putOptionVolume12a[1] > percent_min and putOptionVolume12a[1] > 0,  otmcallstrike12 , Round(putOptionVolume12a * 100 / putOptionVolume12a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume13a / putOptionVolume13a[1] > percent_min and putOptionVolume13a[1] > 0,  otmcallstrike13 , Round(putOptionVolume13a * 100 / putOptionVolume13a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume14a / putOptionVolume14a[1] > percent_min and putOptionVolume14a[1] > 0,  otmcallstrike14 , Round(putOptionVolume14a * 100 / putOptionVolume14a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume15a / putOptionVolume15a[1] > percent_min and putOptionVolume15a[1] > 0,  otmcallstrike15 , Round(putOptionVolume15a * 100 / putOptionVolume15a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume16a / putOptionVolume16a[1] > percent_min and putOptionVolume16a[1] > 0,  otmcallstrike16 , Round(putOptionVolume16a * 100 / putOptionVolume16a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume17a / putOptionVolume17a[1] > percent_min and putOptionVolume17a[1] > 0,  otmcallstrike17 , Round(putOptionVolume17a * 100 / putOptionVolume17a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume18a / putOptionVolume18a[1] > percent_min and putOptionVolume18a[1] > 0,  otmcallstrike18 , Round(putOptionVolume18a * 100 / putOptionVolume18a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume19a / putOptionVolume19a[1] > percent_min and putOptionVolume19a[1] > 0,  otmcallstrike19 , Round(putOptionVolume19a * 100 / putOptionVolume19a[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume20a / putOptionVolume20a[1] > percent_min and putOptionVolume20a[1] > 0,  otmcallstrike20 , Round(putOptionVolume20a * 100 / putOptionVolume20a[1], 0) + "%", GlobalColor("PutColor"), no);

AddChartBubble(putOptionVolume1 / putOptionVolume1[1] > percent_min and putOptionVolume1[1] > 0,  itmcallstrike1 , Round(putOptionVolume1 * 100 / putOptionVolume1[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume2 / putOptionVolume2[1] > percent_min and putOptionVolume2[1] > 0,  itmcallstrike2 , Round(putOptionVolume2 * 100 / putOptionVolume2[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume3 / putOptionVolume3[1] > percent_min and putOptionVolume3[1] > 0,  itmcallstrike3 , Round(putOptionVolume3 * 100 / putOptionVolume3[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume4 / putOptionVolume4[1] > percent_min and putOptionVolume4[1] > 0,  itmcallstrike4 , Round(putOptionVolume4 * 100 / putOptionVolume4[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume5 / putOptionVolume5[1] > percent_min and putOptionVolume5[1] > 0,  itmcallstrike5 , Round(putOptionVolume5 * 100 / putOptionVolume5[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume6 / putOptionVolume6[1] > percent_min and putOptionVolume6[1] > 0,  itmcallstrike6 , Round(putOptionVolume6 * 100 / putOptionVolume6[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume7 / putOptionVolume7[1] > percent_min and putOptionVolume7[1] > 0,  itmcallstrike7 , Round(putOptionVolume7 * 100 / putOptionVolume7[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume8 / putOptionVolume8[1] > percent_min and putOptionVolume8[1] > 0,  itmcallstrike8 , Round(putOptionVolume8 * 100 / putOptionVolume8[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume9 / putOptionVolume9[1] > percent_min and putOptionVolume9[1] > 0,  itmcallstrike9 , Round(putOptionVolume9 * 100 / putOptionVolume9[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume10 / putOptionVolume10[1] > percent_min and putOptionVolume10[1] > 0,  itmcallstrike10 , Round(putOptionVolume10 * 100 / putOptionVolume10[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume11 / putOptionVolume11[1] > percent_min and putOptionVolume11[1] > 0,  itmcallstrike11 , Round(putOptionVolume11 * 100 / putOptionVolume11[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume12 / putOptionVolume12[1] > percent_min and putOptionVolume12[1] > 0,  itmcallstrike12 , Round(putOptionVolume12 * 100 / putOptionVolume12[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume13 / putOptionVolume13[1] > percent_min and putOptionVolume13[1] > 0,  itmcallstrike13 , Round(putOptionVolume13 * 100 / putOptionVolume13[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume14 / putOptionVolume14[1] > percent_min and putOptionVolume14[1] > 0,  itmcallstrike14 , Round(putOptionVolume14 * 100 / putOptionVolume14[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume15 / putOptionVolume15[1] > percent_min and putOptionVolume15[1] > 0,  itmcallstrike15 , Round(putOptionVolume15 * 100 / putOptionVolume15[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume16 / putOptionVolume16[1] > percent_min and putOptionVolume16[1] > 0,  itmcallstrike16 , Round(putOptionVolume16 * 100 / putOptionVolume16[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume17 / putOptionVolume17[1] > percent_min and putOptionVolume17[1] > 0,  itmcallstrike17 , Round(putOptionVolume17 * 100 / putOptionVolume17[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume18 / putOptionVolume18[1] > percent_min and putOptionVolume18[1] > 0,  itmcallstrike18 , Round(putOptionVolume18 * 100 / putOptionVolume18[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume19 / putOptionVolume19[1] > percent_min and putOptionVolume19[1] > 0,  itmcallstrike19 , Round(putOptionVolume19 * 100 / putOptionVolume19[1], 0) + "%", GlobalColor("PutColor"), no);
AddChartBubble(putOptionVolume20 / putOptionVolume20[1] > percent_min and putOptionVolume20[1] > 0,  itmcallstrike20 , Round(putOptionVolume20 * 100 / putOptionVolume20[1], 0) + "%", GlobalColor("PutColor"), no);
